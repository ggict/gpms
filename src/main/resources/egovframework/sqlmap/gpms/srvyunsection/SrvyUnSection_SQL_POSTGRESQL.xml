<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="srvyUnSectionDAO">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	<typeAlias alias="srvyUnSectionVO" type="kr.go.gg.gpms.srvyunsection.service.model.SrvyUnSectionVO" />


	<select id="srvyUnSectionDAO.list" parameterClass="srvyUnSectionVO" resultClass="srvyUnSectionVO">
		<![CDATA[ 
			/* srvyUnSectionDAO.list */ 
		]]>
		
		select 
			* 
		from(
			select 
				ROW_NUMBER() OVER() rn	
				,count(*) OVER() AS total_count
				,* 
			from (
				select 
					t1.road_no
					,t1.road_name
					,t1.st_point
					,t1.ed_point
					,t2.srvy_year
					,t2.total_road_l
					,t2.road_l
					,case 
						when (t2.road_l / t2.total_road_l) * 100 = 0 
						then '0'
						else to_char((t2.road_l / t2.total_road_l) * 100, 'FM999999999.00')
						end persent
				from tn_route_info t1
				left outer join 
				(	
					select
						t1.route_code
						, t2.srvy_year
						, coalesce(t1.total_road_l, 0) total_road_l
						, coalesce(t2.road_l, 0) road_l
					from 
						(SELECT route_code, coalesce(sum(ROAD_L), 0) TOTAL_ROAD_L FROM cell_10 group by cell_10.route_code) as t1 
					left outer join
					(
						SELECT
							srvy_year
							, cell_10.route_code route_code
							, coalesce(sum(ROAD_L), 0) ROAD_L
						FROM cell_10 
						right outer join tn_mumm_sctn_srvy_dta
						on (
							cell_10.route_code = tn_mumm_sctn_srvy_dta.route_code
							AND cell_10.direct_code = tn_mumm_sctn_srvy_dta.direct_code
							AND cell_10.track = tn_mumm_sctn_srvy_dta.track
							AND cell_10.strtpt = tn_mumm_sctn_srvy_dta.strtpt
							AND cell_10.endpt = tn_mumm_sctn_srvy_dta.endpt
							AND tn_mumm_sctn_srvy_dta.use_at = 'Y'
							AND tn_mumm_sctn_srvy_dta.delete_at = 'N'
						)
						where 1=1
						<isNotEmpty property="SRVY_YEAR">
						AND tn_mumm_sctn_srvy_dta.SRVY_YEAR = #SRVY_YEAR#
						</isNotEmpty>
						<isNotEmpty property="ROAD_NO">
						AND cell_10.route_code = #ROAD_NO#
						</isNotEmpty>
							
						group by cell_10.route_code, srvy_year
					) as t2
					on (t1.route_code = t2.route_code)
					order by srvy_year
					
				) t2
				on (t1.road_no = t2.route_code)
				where 1=1
				<isNotEmpty property="ROAD_NO">
				AND t1.road_no = #ROAD_NO#
				</isNotEmpty>
				
				order by t1.road_no asc, t2.srvy_year asc
			) as sub_t
			
		) as res	
		where 1=1
		
		<isEqual prepend="  " property="usePage" compareValue="true">
		<![CDATA[
			AND rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
		]]>
		</isEqual>
		
	</select>
	
	<select id="srvyUnSectionDAO.sectionlocation" parameterClass="srvyUnSectionVO" resultClass="srvyUnSectionVO">
	<![CDATA[
		/* srvyUnSectionDAO.unsectionlocation */
	]]>
	
		select
			route_code
			,ST_AsGeoJSON(ST_Collect(t1.geom)) geojson 
			/*
			ST_Collect(t1.geom) geom 
			count(t1.cell_id)
			*/
		from cell_10 t1
		where 1=1 
		<isNotEmpty property="ROUTE_CODE">
		AND t1.route_code = #ROUTE_CODE#
		</isNotEmpty>
		and cell_id in (
				SELECT
					cell_id
				FROM cell_10 
				right outer join tn_mumm_sctn_srvy_dta
				on (
					cell_10.route_code = tn_mumm_sctn_srvy_dta.route_code
					AND cell_10.direct_code = tn_mumm_sctn_srvy_dta.direct_code
					AND cell_10.track = tn_mumm_sctn_srvy_dta.track
					AND cell_10.strtpt = tn_mumm_sctn_srvy_dta.strtpt
					AND cell_10.endpt = tn_mumm_sctn_srvy_dta.endpt
					AND tn_mumm_sctn_srvy_dta.use_at = 'Y'
					AND tn_mumm_sctn_srvy_dta.delete_at = 'N'
				)
				where 1=1
				<isNotEmpty property="SRVY_YEAR">
				AND tn_mumm_sctn_srvy_dta.SRVY_YEAR = #SRVY_YEAR#
				</isNotEmpty>
				<isNotEmpty property="ROUTE_CODE">
				AND cell_10.route_code = #ROUTE_CODE#
				</isNotEmpty>
			)
		group by route_code	
	</select>
	
	<select id="srvyUnSectionDAO.unsectionlocation" parameterClass="srvyUnSectionVO" resultClass="srvyUnSectionVO">
	<![CDATA[
		/* srvyUnSectionDAO.unsectionlocation */
	]]>
	
		select
			route_code
			,ST_AsGeoJSON(ST_Collect(t1.geom)) geojson 
			/*
			ST_Collect(t1.geom) geom 
			count(t1.cell_id)
			*/
		from cell_10 t1
		where 1=1 
		<isNotEmpty property="ROUTE_CODE">
		AND t1.route_code = #ROUTE_CODE#
		</isNotEmpty>
		and cell_id not in (
				SELECT
					cell_id
				FROM cell_10 
				right outer join tn_mumm_sctn_srvy_dta
				on (
					cell_10.route_code = tn_mumm_sctn_srvy_dta.route_code
					AND cell_10.direct_code = tn_mumm_sctn_srvy_dta.direct_code
					AND cell_10.track = tn_mumm_sctn_srvy_dta.track
					AND cell_10.strtpt = tn_mumm_sctn_srvy_dta.strtpt
					AND cell_10.endpt = tn_mumm_sctn_srvy_dta.endpt
					AND tn_mumm_sctn_srvy_dta.use_at = 'Y'
					AND tn_mumm_sctn_srvy_dta.delete_at = 'N'
				)
				where 1=1
				<isNotEmpty property="SRVY_YEAR">
				AND tn_mumm_sctn_srvy_dta.SRVY_YEAR = #SRVY_YEAR#
				</isNotEmpty>
				<isNotEmpty property="ROUTE_CODE">
				AND cell_10.route_code = #ROUTE_CODE#
				</isNotEmpty>
			)
		group by route_code	
	</select>
	
	<select id="srvyUnSectionDAO.srvyYearList" parameterClass="srvyUnSectionVO" resultClass="srvyUnSectionVO">
		SELECT 
			SRVY_YEAR
		FROM tn_mumm_sctn_srvy_dta
		GROUP BY SRVY_YEAR
	</select>

</sqlMap>
