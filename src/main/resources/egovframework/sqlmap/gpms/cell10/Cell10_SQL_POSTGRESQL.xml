<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="cell10DAO"> 

    <typeAlias alias="egovMap"  type="egovframework.rte.psl.dataaccess.util.EgovMap" />
    <typeAlias  alias="cell10SerarchVO" type="kr.go.gg.gpms.cell10.service.model.Cell10DefaultVO"/>
    <typeAlias alias="cell10VO" type="kr.go.gg.gpms.cell10.service.model.Cell10VO" />
    <typeAlias alias="cellSectVO"   type="kr.go.gg.gpms.cellsect.service.model.CellSectVO" />

    <resultMap id="cell10.resultMap"
        class="cell10VO">
        <result property="GID" column="GID" columnIndex="1" /> <!-- CELL_10.GID -->
        <result property="OBJECT_ID" column="OBJECT_ID" columnIndex="9" /> <!-- CELL_10.OBJECT_ID -->
        <result property="ROUTE_CODE" column="ROUTE_CODE" columnIndex="10" /> <!-- CELL_10.ROUTE_CODE -->
        <result property="DIRECT_CODE" column="DIRECT_CODE" columnIndex="11" /> <!-- CELL_10.DIRECT_CODE -->
        <result property="TRACK" column="TRACK" columnIndex="12" /> <!-- CELL_10.TRACK -->
        <result property="STRTPT" column="STRTPT" columnIndex="13" /> <!-- CELL_10.STRTPT -->
        <result property="ENDPT" column="ENDPT" columnIndex="14" /> <!-- CELL_10.ENDPT -->
        <result property="DEPT_CODE" column="DEPT_CODE" columnIndex="15" /> <!-- CELL_10.DEPT_CODE -->
        <result property="CELL_TYPE" column="CELL_TYPE" columnIndex="16" /> <!-- CELL_10.CELL_TYPE -->
        <result property="VMTC_GRAD" column="VMTC_GRAD" columnIndex="17" /> <!-- CELL_10.VMTC_GRAD -->
        <result property="ROAD_GRAD" column="ROAD_GRAD" columnIndex="18" /> <!-- CELL_10.ROAD_GRAD -->
        <result property="ADM_CODE" column="ADM_CODE" columnIndex="19" /> <!-- CELL_10.ADM_CODE -->
        <result property="CREAT_DT" column="CREAT_DT" columnIndex="20" /> <!-- CELL_10.CREAT_DT -->
        <result property="UPDUSR_NO" column="UPDUSR_NO" columnIndex="21" /> <!-- CELL_10.UPDUSR_NO -->
        <result property="UPDT_DT" column="UPDT_DT" columnIndex="22" /> <!-- CELL_10.UPDT_DT -->
        <result property="CELL_ID" column="CELL_ID" columnIndex="23" /> <!-- CELL_10.CELL_ID -->
    </resultMap>

    <insert id="cell10DAO.insertCell10">
    <selectKey resultClass="String" keyProperty="GID">
    <![CDATA[
        select nextval('SEQ_CELL_10')
    ]]>
    </selectKey>
    <![CDATA[
        /* cell10DAO.insertCell10 */
        /* CELL_10 등록 */

        INSERT INTO CELL_10 (
            GID /* CELL_10.GID */
            , OBJECT_ID /* CELL_10.OBJECT_ID */
            , ROUTE_CODE /* CELL_10.ROUTE_CODE */
            , DIRECT_CODE /* CELL_10.DIRECT_CODE */
            , TRACK /* CELL_10.TRACK */
            , STRTPT /* CELL_10.STRTPT */
            , ENDPT /* CELL_10.ENDPT */
            , DEPT_CODE /* CELL_10.DEPT_CODE */
            , CELL_TYPE /* CELL_10.CELL_TYPE */
            , VMTC_GRAD /* CELL_10.VMTC_GRAD */
            , ROAD_GRAD /* CELL_10.ROAD_GRAD */
            , ADM_CODE /* CELL_10.ADM_CODE */
            , CREAT_DT /* CELL_10.CREAT_DT */
            , UPDUSR_NO /* CELL_10.UPDUSR_NO */
            , UPDT_DT /* CELL_10.UPDT_DT */
            , CELL_ID /* CELL_10.CELL_ID */
        ) VALUES (
            #GID# /* CELL_10.GID */
            , #OBJECT_ID# /* CELL_10.OBJECT_ID */
            , #ROUTE_CODE# /* CELL_10.ROUTE_CODE */
            , #DIRECT_CODE# /* CELL_10.DIRECT_CODE */
            , #TRACK# /* CELL_10.TRACK */
            , #STRTPT# /* CELL_10.STRTPT */
            , #ENDPT# /* CELL_10.ENDPT */
            , #DEPT_CODE# /* CELL_10.DEPT_CODE */
            , #CELL_TYPE# /* CELL_10.CELL_TYPE */
            , #VMTC_GRAD# /* CELL_10.VMTC_GRAD */
            , #ROAD_GRAD# /* CELL_10.ROAD_GRAD */
            , #ADM_CODE# /* CELL_10.ADM_CODE */
            , #CREAT_DT# /* CELL_10.CREAT_DT */
            , #UPDUSR_NO# /* CELL_10.UPDUSR_NO */
            , NOW() /* CELL_10.UPDT_DT */
            , #CELL_ID# /* CELL_10.CELL_ID */
        )
]]>
    </insert>

    <update id="cell10DAO.updateCell10">
    <![CDATA[
        /* cell10DAO.updateCell10 */
        /* CELL_10 수정 */
        UPDATE CELL_10 SET
        OBJECT_ID = #OBJECT_ID# /* CELL_10.OBJECT_ID */
        , ROUTE_CODE = #ROUTE_CODE# /* CELL_10.ROUTE_CODE */
        , DIRECT_CODE = #DIRECT_CODE# /* CELL_10.DIRECT_CODE */
        , TRACK = #TRACK# /* CELL_10.TRACK */
        , STRTPT = #STRTPT# /* CELL_10.STRTPT */
        , ENDPT = #ENDPT# /* CELL_10.ENDPT */
        , DEPT_CODE = #DEPT_CODE# /* CELL_10.DEPT_CODE */
        , CELL_TYPE = #CELL_TYPE# /* CELL_10.CELL_TYPE */
        , VMTC_GRAD = #VMTC_GRAD# /* CELL_10.VMTC_GRAD */
        , ROAD_GRAD = #ROAD_GRAD# /* CELL_10.ROAD_GRAD */
        , ADM_CODE = #ADM_CODE# /* CELL_10.ADM_CODE */
        , CREAT_DT = #CREAT_DT# /* CELL_10.CREAT_DT */
        , UPDUSR_NO = #UPDUSR_NO# /* CELL_10.UPDUSR_NO */
        , UPDT_DT = NOW() /* CELL_10.UPDT_DT */
        , CELL_ID = #CELL_ID# /* CELL_10.CELL_ID */
        WHERE 1 = 1
        AND GID = #GID# /* CELL_10.GID */
]]>
    </update>

    <delete id="cell10DAO.deleteCell10">
    <![CDATA[
        /* cell10DAO.deleteCell10 */
        /* CELL_10 삭제 */
        UPDATE CELL_10 SET
        , UPDUSR_NO = #UPDUSR_NO# /* CELL_10.UPDUSR_NO */
        , UPDT_DT = NOW() /* CELL_10.UPDT_DT */
        WHERE 1 = 1
        AND GID = #GID# /* CELL_10.GID */
]]>
    </delete>

    <select id="cell10DAO.selectCell10"
        parameterClass="cell10VO"
        resultClass="cell10VO">
    <![CDATA[
        /* cell10DAO.selectCell10 */
        /* CELL_10 조회 */
        SELECT
            cell10.GID /* CELL_10.GID */
            , cell10.OBJECT_ID /* CELL_10.OBJECT_ID */
            , cell10.ROUTE_CODE /* CELL_10.ROUTE_CODE */
            , cell10.DIRECT_CODE /* CELL_10.DIRECT_CODE */
            , cell10.TRACK /* CELL_10.TRACK */
            , cell10.STRTPT /* CELL_10.STRTPT */
            , cell10.ENDPT /* CELL_10.ENDPT */
            , cell10.DEPT_CODE /* CELL_10.DEPT_CODE */
            , cell10.CELL_TYPE /* CELL_10.CELL_TYPE */
            , cell10.VMTC_GRAD /* CELL_10.VMTC_GRAD */
            , cell10.ROAD_GRAD /* CELL_10.ROAD_GRAD */
            , cell10.ADM_CODE /* CELL_10.ADM_CODE */
            , cell10.CREAT_DT /* CELL_10.CREAT_DT */
            , cell10.UPDUSR_NO /* CELL_10.UPDUSR_NO */
            , cell10.UPDT_DT /* CELL_10.UPDT_DT */
            , cell10.CELL_ID /* CELL_10.CELL_ID */
        FROM CELL_10 cell10
        WHERE 1 = 1
        AND cell10.GID = #GID# /* CELL_10.GID */
]]>
    </select>

    <sql id="cell10DAO.selectCell10List.where">
        WHERE 1 = 1

        <isEqual property="searchCondition" compareValue="0">
            <![CDATA[
                AND cell10.GID = #searchKeyword#::int
            ]]>
        </isEqual>
        <!-- 추후변경_sdh
        <isEqual property="searchCondition" compareValue="1">
            <![CDATA[
                AND cell10.G2_DATASETID LIKE '%' || #searchKeyword# || '%'
            ]]>
        </isEqual>
         -->
        <isNotEmpty property="GID"><![CDATA[ /* CELL_10.GID */ AND cell10.GID = #GID# ]]></isNotEmpty>
        <isNotEmpty property="OBJECT_ID"><![CDATA[ /* CELL_10.OBJECT_ID */ AND cell10.OBJECT_ID = #OBJECT_ID# ]]></isNotEmpty>
        <isNotEmpty property="ROUTE_CODE"><![CDATA[ /* CELL_10.ROUTE_CODE */ AND cell10.ROUTE_CODE = #ROUTE_CODE# ]]></isNotEmpty>
        <isNotEmpty property="DIRECT_CODE"><![CDATA[ /* CELL_10.DIRECT_CODE */ AND cell10.DIRECT_CODE = #DIRECT_CODE# ]]></isNotEmpty>
        <isNotEmpty property="TRACK"><![CDATA[ /* CELL_10.TRACK */ AND cell10.TRACK = #TRACK# ]]></isNotEmpty>
        <isNotEmpty property="STRTPT"><![CDATA[ /* CELL_10.STRTPT */ AND cell10.STRTPT >= #STRTPT#::int ]]></isNotEmpty>
        <isNotEmpty property="ENDPT"><![CDATA[ /* CELL_10.ENDPT */ AND cell10.ENDPT <= #ENDPT#::int ]]></isNotEmpty>
        <isNotEmpty property="DEPT_CODE"><![CDATA[ /* CELL_10.DEPT_CODE */ AND cell10.DEPT_CODE = #DEPT_CODE#::int ]]></isNotEmpty>
        <isNotEmpty property="CELL_TYPE"><![CDATA[ /* CELL_10.CELL_TYPE */ AND cell10.CELL_TYPE = #CELL_TYPE# ]]></isNotEmpty>
        <isNotEmpty property="VMTC_GRAD"><![CDATA[ /* CELL_10.VMTC_GRAD */ AND cell10.VMTC_GRAD = #VMTC_GRAD# ]]></isNotEmpty>
        <isNotEmpty property="ROAD_GRAD"><![CDATA[ /* CELL_10.ROAD_GRAD */ AND cell10.ROAD_GRAD = #ROAD_GRAD# ]]></isNotEmpty>
        <isNotEmpty property="ADM_CODE"><![CDATA[ /* CELL_10.ADM_CODE */ AND cell10.ADM_CODE = #ADM_CODE# ]]></isNotEmpty>
        <isNotEmpty property="CREAT_DT"><![CDATA[ /* CELL_10.CREAT_DT */ AND cell10.CREAT_DT = #CREAT_DT# ]]></isNotEmpty>
        <isNotEmpty property="UPDUSR_NO"><![CDATA[ /* CELL_10.UPDUSR_NO */ AND cell10.UPDUSR_NO = #UPDUSR_NO#::int ]]></isNotEmpty>
        <isNotEmpty property="UPDT_DT"><![CDATA[ /* CELL_10.UPDT_DT */ AND cell10.UPDT_DT = #UPDT_DT# ]]></isNotEmpty>
        <isNotEmpty property="CELL_ID"><![CDATA[ /* CELL_10.CELL_ID */ AND cell10.CELL_ID = #CELL_ID# ]]></isNotEmpty>
        <isNotEmpty property="CELL_ID_LIST"><![CDATA[ /* CELL_10.CELL_ID */ ]]> <iterate close=")" conjunction="," open="(" prepend=" AND CELL_ID IN " property="CELL_ID_LIST"> #CELL_ID_LIST[]# </iterate></isNotEmpty>

    </sql>

    <select id="cell10DAO.selectCell10List"
        parameterClass="cell10VO"
        resultClass="cell10VO">
<![CDATA[
        /* cell10DAO.selectCell10List */
        /* CELL_10 조회1 */
            SELECT
                cell10.GID /* CELL_10.GID */
                , cell10.OBJECT_ID /* CELL_10.OBJECT_ID */
                , cell10.ROUTE_CODE /* CELL_10.ROUTE_CODE */
                , cell10.ROUTE_CODE::int ROAD_NO_VAL
                , tnrouteinfo.ROAD_NAME
                , cell10.DIRECT_CODE /* CELL_10.DIRECT_CODE */
                , cell10.TRACK /* CELL_10.TRACK */
                , cell10.STRTPT /* CELL_10.STRTPT */
                , cell10.ENDPT /* CELL_10.ENDPT */
                , (SELECT tcdept.LOWEST_DEPT_NM FROM TC_DEPT tcdept
                    WHERE tcdept.DEPT_CODE = cell10.DEPT_CODE::text
                      AND tcdept.DELETE_AT='N' AND tcdept.USE_AT='Y') DEPT_CODE /* CELL_10.DEPT_CODE */
                , (SELECT tccode.CODE_NM FROM TC_CODE tccode
                    WHERE tccode.CODE_VAL = cell10.CELL_TYPE AND tccode.CL_CODE = 'CELT'
                      AND tccode.DELETE_AT='N' AND tccode.USE_AT='Y') CELL_TYPE /* CELL_10.CELL_TYPE */
                , (SELECT tccode.CODE_NM FROM TC_CODE tccode
                    WHERE tccode.CODE_VAL = cell10.VMTC_GRAD AND tccode.CL_CODE = 'VNTC'
                      AND tccode.DELETE_AT='N' AND tccode.USE_AT='Y') VMTC_GRAD /* CELL_10.VMTC_GRAD */
                , (SELECT tccode.CODE_NM FROM TC_CODE tccode
                    WHERE tccode.CODE_VAL = cell10.ROAD_GRAD AND tccode.CL_CODE = 'RDGD'
                      AND tccode.DELETE_AT='N' AND tccode.USE_AT='Y') ROAD_GRAD /* CELL_10.ROAD_GRAD */
                , (SELECT n3a.NAME FROM N3A_G0100000 n3a WHERE SUBSTR(n3a.BJCD,1,5) = cell10.ADM_CODE) ADM_NM /* CELL_10.ADM_CODE */
                , cell10.CREAT_DT /* CELL_10.CREAT_DT */
                , cell10.UPDUSR_NO /* CELL_10.UPDUSR_NO */
                , cell10.UPDT_DT /* CELL_10.UPDT_DT */
                , cell10.CELL_ID /* CELL_10.CELL_ID */
            FROM CELL_10 cell10
           INNER JOIN TN_ROUTE_INFO tnrouteinfo
              ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
]]>

        <include refid="cell10DAO.selectCell10List.where" />

<![CDATA[
        ORDER BY
                cell10.ROUTE_CODE, cell10.DIRECT_CODE, cell10.TRACK, cell10.STRTPT, cell10.ENDPT ASC
]]>
        <isEqual prepend=" " property="usePage" compareValue="true">
        <![CDATA[
            LIMIT #recordCountPerPage# OFFSET #firstIndex#
        ]]>
        </isEqual>
<![CDATA[
]]>
    </select>


    <select id="cell10DAO.selectCell10ListTotalCount"
        parameterClass="cell10VO"
        resultClass="int">
<![CDATA[
        /* cell10DAO.selectCell10ListTotalCount */
        /* CELL_10 목록 개수 조회  */
        SELECT COUNT(*) AS totCnt
        FROM CELL_10 cell10
        INNER JOIN TN_ROUTE_INFO tnrouteinfo
           ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
]]>
        <include refid="cell10DAO.selectCell10List.where" />
<![CDATA[
]]>
    </select>

    <select id="cell10DAO.selectRouteInfoByCellID"
        parameterClass="cell10VO"
        resultClass="cell10VO">
<![CDATA[
        /* cell10DAO.selectRouteInfoByCellID */
        /* CELL_10 조회 */
        SELECT cell10.ROUTE_CODE
             , tnrouteinfo.ROAD_NAME
             , tccode.code_nm ROAD_GRAD
             , CASE WHEN MAX(cell10.DIRECT_S) = 1 AND MAX(cell10.DIRECT_E) = 1 THEN 'SE' ELSE MAX(cell10.DIRECT_CODE) END DIRECT_CODE
             , COUNT(cell10.TRACK) TRACK
             , MIN(cell10.STRTPT) STRTPT
             , MAX(cell10.ENDPT) ENDPT
          FROM(
                    SELECT ROUTE_CODE
                         , DIRECT_CODE
                         , MAX(CASE WHEN DIRECT_CODE='S' THEN 1 ELSE 0 END) DIRECT_S
     					 , MAX(CASE WHEN DIRECT_CODE='E' THEN 1 ELSE 0 END) DIRECT_E
                         , TRACK
                         , MIN(STRTPT) STRTPT
                         , MAX(ENDPT) ENDPT
                         , ROAD_GRAD
                    FROM CELL_10
                    WHERE 1=1
]]>
                    <isNotEmpty property="CELL_ID_LIST">
                    <![CDATA[ /* 조사_자료_엑셀.조사_번호 */  ]]>
                        <iterate close=")" conjunction="," open="("
                            prepend=" AND CELL_ID IN " property="CELL_ID_LIST">
                            #CELL_ID_LIST[]#
                        </iterate>
                    </isNotEmpty>
<![CDATA[
                    GROUP BY ROUTE_CODE, DIRECT_CODE, TRACK, ROAD_GRAD
               ) cell10
               , TN_ROUTE_INFO tnrouteinfo
               , TC_CODE tccode
          WHERE cell10.ROUTE_CODE = tnrouteinfo.ROAD_NO
            AND CELL10.ROAD_GRAD = tccode.CODE_VAL
            AND tccode.USE_AT = 'Y'
            AND tccode.DELETE_AT = 'N'
          GROUP BY cell10.ROUTE_CODE, tnrouteinfo.ROAD_NAME, tccode.code_nm
]]>
    </select>

    <update id="cell10DAO.updateCell10Type">
    <![CDATA[
        /* cell10DAO.updateCell10Type */
        /* CELL_TYPE에 따른  CELL_TYPE 수정*/
        UPDATE CELL_10
           SET CELL_TYPE = (#CELL_TYPE#)
         WHERE ROUTE_CODE = #ROUTE_CODE#
           AND DIRECT_CODE = #DIRECT_CODE#
           AND TRACK = #TRACK#
           AND STRTPT >= #STRTPT#::int
           AND ENDPT <= #ENDPT#::int
    ]]>
    </update>

    <select id="cell10DAO.selectSrvyRoutLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectSrvyRoutLenStatsResult */
            /* 포장상태조사구간 노선별 통계 조회*/
             SELECT tnrouteinfo.ROAD_NO::int as ROUTE_CODE,
                    COALESCE(tnrouteinfo.ROAD_NAME,tnrouteinfo.ROAD_NO::int::text) as ROAD_NAME,
                    COALESCE(SUM(cell10.ROAD_L) / 1000, 0) AS LEN
               FROM TN_ROUTE_INFO tnrouteinfo LEFT OUTER JOIN CELL_10 cell10 ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
                    LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
               WHERE 1=1
        ]]>
            <isNotEmpty property="SCH_ROAD_GRAD"><![CDATA[ AND cell10.ROAD_GRAD = #SCH_ROAD_GRAD# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ROUTE_CODE"><![CDATA[ AND cell10.ROUTE_CODE = #SCH_ROUTE_CODE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY  tnrouteinfo.ROAD_NO, tnrouteinfo.ROAD_NAME
            ORDER BY  tnrouteinfo.ROAD_NAME
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyRoutLenStatsExcelResult" parameterClass="cell10VO" resultClass="hashmap">
        <![CDATA[
            /* cell10DAO.selectSrvyRoutLenStatsExcelResult */
            /* 포장상태조사구간 노선별 통계 엑셀 목록 조회*/
             SELECT tnrouteinfo.ROAD_NO::int as ROUTE_CODE,
                    COALESCE(SUM(cell10.ROAD_L)/1000, 0) AS LEN
                    COALESCE(tnrouteinfo.ROAD_NAME,tnrouteinfo.ROAD_NO::text) as ROAD_NAME,
               FROM TN_ROUTE_INFO tnrouteinfo LEFT OUTER JOIN CELL_10 cell10 ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
                    LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
               WHERE 1=1
        ]]>
            <isNotEmpty property="SCH_ROUTE_CODE"><![CDATA[ AND cell10.ROUTE_CODE = #SCH_ROUTE_CODE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY  tnrouteinfo.ROAD_NO, tnrouteinfo.ROAD_NAME
            ORDER BY  tnrouteinfo.ROAD_NAME
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyRoutLenStatsTablePageList"  parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
            /* cell10DAO.selectSrvyRoutLenStatsTablePageList */
            /* 포장상태조사구간 노선별 통계 테이블 조회*/
             SELECT tnrouteinfo.ROAD_NO::int as ROUTE_CODE,
                    tnrouteinfo.ROAD_NAME,
                    COALESCE(SUM(cell10.ROAD_L) / 1000, 0) AS LEN
               FROM TN_ROUTE_INFO tnrouteinfo LEFT OUTER JOIN CELL_10 cell10 ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
                    LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
               WHERE 1=1
            GROUP BY  tnrouteinfo.ROAD_NO, tnrouteinfo.ROAD_NAME
            ORDER BY  tnrouteinfo.ROAD_NAME
        ]]>
        </select>

    <select id="cell10DAO.selectSrvyRoutLenStatsExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectSrvyRoutLenStatsExcel */
            /* 포장상태조사구간 노선별 통계 엑셀 조회*/
            SELECT tnrouteinfo.ROAD_NO::int as ROUTE_CODE,
                    tnrouteinfo.ROAD_NAME,
                    COALESCE(SUM(cell10.ROAD_L)/1000, 0) AS LEN
               FROM TN_ROUTE_INFO tnrouteinfo LEFT OUTER JOIN CELL_10 cell10 ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
                    LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
               WHERE 1=1
        ]]>
            <isNotEmpty property="SCH_ROUTE_CODE"><![CDATA[ AND cell10.ROUTE_CODE = #SCH_ROUTE_CODE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY  tnrouteinfo.ROAD_NO, tnrouteinfo.ROAD_NAME
            ORDER BY  tnrouteinfo.ROAD_NAME
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyDeptLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectSrvyDeptLenStatsResult */
            /* 포장상태조사구간 관리기관별 통계 조회*/
            SELECT
                cell10.DEPT_CODE,
                ( SELECT lowest_dept_nm FROM TC_DEPT tcdept WHERE tcdept.DEPT_CODE::int = cell10.DEPT_CODE) AS DEPT_NM,
                SUM(ROAD_L)/1000 AS LEN
            FROM  CELL_10 cell10
                LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta
                ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
            WHERE 1 = 1
                AND cell10.DEPT_CODE  IN ('6411399','6411799')/* 6411399:도로건설과/6411799:북부도로과 */
        ]]>
            <isNotEmpty property="SCH_DEPT_CODE1"><![CDATA[ AND cell10.DEPT_CODE = #SCH_DEPT_CODE1#::int ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY cell10.DEPT_CODE
            ORDER BY cell10.DEPT_CODE
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyDeptLenStatsExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectSrvyDeptLenStatsExcel */
            /* 포장상태조사구간 관리기관별 통계 엑셀 조회*/
            SELECT
                cell10.DEPT_CODE,
                ( SELECT lowest_dept_nm FROM TC_DEPT tcdept WHERE tcdept.DEPT_CODE::numeric = cell10.DEPT_CODE) AS DEPT_NM,
                SUM(ROAD_L)/1000 AS LEN
            FROM  CELL_10 cell10
                LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta
                ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
            WHERE 1 = 1
                AND cell10.DEPT_CODE::int::text  IN ('6411399','6411799')/* 6411399:도로건설과/6411799:북부도로과 */
        ]]>
            <isNotEmpty property="SCH_DEPT_CODE1"><![CDATA[ AND cell10.DEPT_CODE = #SCH_DEPT_CODE1#::int ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY cell10.DEPT_CODE
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyRoadLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectSrvyRoadLenStatsResult */
            /* 포장상태조사구간 도로등급별 통계 조회*/
            SELECT
                cell10.ROAD_GRAD,
                (SELECT CODE_NM FROM TC_CODE tccode WHERE tccode.CODE_VAL = cell10.ROAD_GRAD) AS ROAD_NAME,
                SUM(ROAD_L) / 1000 AS LEN
            FROM  CELL_10 cell10
                LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta
                ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
            WHERE 1 = 1
                AND cell10.ROAD_GRAD IS NOT NULL
        ]]>
            <isNotEmpty property="SCH_ROAD_CODE"><![CDATA[ AND cell10.ROAD_GRAD = #SCH_ROAD_CODE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY cell10.ROAD_GRAD
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyRoadLenStatsExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectSrvyRoadLenStatsExcel */
            /* 포장상태조사구간 도로등급별 통계 엑셀조회*/
            SELECT
                cell10.ROAD_GRAD,
                (SELECT CODE_NM FROM TC_CODE tccode WHERE tccode.CODE_VAL = cell10.ROAD_GRAD) AS ROAD_NAME,
                SUM(ROAD_L)/1000 AS LEN
            FROM  CELL_10 cell10
                LEFT OUTER JOIN TN_MUMM_SCTN_SRVY_DTA tnmummsctnsrvydta
                ON cell10.ROUTE_CODE = tnmummsctnsrvydta.ROUTE_CODE
                AND cell10.DIRECT_CODE = tnmummsctnsrvydta.DIRECT_CODE
                AND cell10.TRACK = tnmummsctnsrvydta.TRACK
                AND cell10.STRTPT = tnmummsctnsrvydta.STRTPT
                AND cell10.ENDPT = tnmummsctnsrvydta.ENDPT
                AND tnmummsctnsrvydta.USE_AT = 'Y'
                AND tnmummsctnsrvydta.DELETE_AT = 'N'
            WHERE 1 = 1
                AND cell10.ROAD_GRAD IS NOT NULL
        ]]>
            <isNotEmpty property="SCH_ROAD_CODE"><![CDATA[ AND cell10.ROAD_GRAD = #SCH_ROAD_CODE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_STRSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE >= #SCH_STRSRVY_DE# ]]></isNotEmpty>
            <isNotEmpty property="SCH_ENDSRVY_DE"><![CDATA[ AND tnmummsctnsrvydta.SRVY_DE <= #SCH_ENDSRVY_DE# ]]></isNotEmpty>
        <![CDATA[
            GROUP BY cell10.ROAD_GRAD
        ]]>
    </select>


    <select id="cell10DAO.selectRoutLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectRoutLenStatsResult */
            /* 통계 > 노선현황 >  노선별 > 노선GPMS 통계 목록을 조회한다. */
              SELECT tnrouteinfo.ROAD_NO::int AS ROUTE_CODE,
                    COALESCE(tnrouteinfo.ROAD_NAME,tnrouteinfo.ROAD_NO::int) AS ROAD_NAME,
                    COALESCE(SUM(cell10.ROAD_L) / 1000,0) AS LEN
               FROM TN_ROUTE_INFO tnrouteinfo LEFT OUTER JOIN CELL_10 cell10 ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
              GROUP BY tnrouteinfo.ROAD_NO,
                    tnrouteinfo.ROAD_NAME
              ORDER BY tnrouteinfo.ROAD_NO
        ]]>
    </select>

    <select id="cell10DAO.selectRoutLenStatsResultExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectRoutLenStatsResultExcel */
            /* 통계 > 노선현황 >  노선별 > 노선GPMS 통계 엑셀 목록을 조회한다. */
              SELECT tnrouteinfo.ROAD_NO::int AS ROAD_NO,
                    COALESCE(tnrouteinfo.ROAD_NAME,tnrouteinfo.ROAD_NO::int) AS ROAD_NAME,
                    COALESCE(SUM(cell10.ROAD_L),0) AS LEN
               FROM TN_ROUTE_INFO tnrouteinfo LEFT OUTER JOIN CELL_10 cell10 ON tnrouteinfo.ROAD_NO = cell10.ROUTE_CODE
              GROUP BY tnrouteinfo.ROAD_NO,
                    tnrouteinfo.ROAD_NAME
              ORDER BY tnrouteinfo.ROAD_NAME
        ]]>
    </select>

    <select id="cell10DAO.selectDeptLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectDeptLenStatsResult */
            /* 통계 > 노선현황 > 관리기관별 통계 목록을 조회한다 */
               SELECT cell10.DEPT_CODE,
                    ( SELECT LOWEST_DEPT_NM FROM TC_DEPT tcdept WHERE tcdept.DEPT_CODE = cell10.DEPT_CODE::text) AS DEPT_NM,
                     SUM(ROAD_L) /1000 AS LEN
               FROM CELL_10 cell10
              WHERE 1 = 1
                AND cell10.DEPT_CODE::text IN('6411399', '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
              GROUP BY cell10.DEPT_CODE
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyUniDeptLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectSrvyUniDeptLenStatsResult */
            /* 통계 > 노선현황 > 국토부 관리기관별 통계 목록을 조회한다 */
               SELECT MGN_NAME AS DEPT_NM,
                    ( SUM_L / 1000 ) AS LEN
                FROM
                    UNI_MGN_ST UNIMGNST
                WHERE
                    UNIMGNST.MGN_CODE = '6411000'/*경기도 건설 본부 : 6411000*/
        ]]>
        <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
    </select>

    <select id="cell10DAO.selectDeptLenStatsResultExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectDeptLenStatsResultExcel */
            /* 통계 > 노선현황 > 관리기관별 통계 엑셀목록을 조회한다. */
              SELECT cell10.DEPT_CODE,
                    ( SELECT LOWEST_DEPT_NM FROM TC_DEPT tcdept WHERE tcdept.DEPT_CODE = cell10.DEPT_CODE::text) AS DEPT_NM,
                     SUM(ROAD_L) AS LEN
               FROM CELL_10 cell10
              WHERE 1 = 1
                AND cell10.DEPT_CODE::text IN('6411399', '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
              GROUP BY cell10.DEPT_CODE
              ORDER BY  DEPT_NM
        ]]>
    </select>

    <select id="cell10DAO.selectGradLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectGradLenStatsResult */
            /* 통계 > 노선현황 > 도로등급 통계 목록을 조회한다. */
             SELECT cell10.ROAD_GRAD,
                    ( SELECT CODE_NM FROM TC_CODE tccode WHERE tccode.CODE_VAL = cell10.ROAD_GRAD) AS ROAD_NAME,
                    SUM(ROAD_L) / 1000 AS LEN
               FROM CELL_10 cell10
              WHERE 1 = 1
                AND cell10.ROAD_GRAD IS NOT NULL
              GROUP BY cell10.ROAD_GRAD
              ORDER BY ROAD_NAME
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyUniRoadLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectSrvyUniRoadLenStatsResult */
            /* 통계 > 노선현황 > 국토부 도로등급 통계 목록을 조회한다. */
              SELECT ROAD_NAME, LEN, SUM_LEN
               FROM ( SELECT 
							'국지도' AS ROAD_NAME
							,(SUM(UNI.SUM_L) / 1000) AS LEN
							,(SUM(SUM_LEN)   / 1000) AS SUM_LEN
                        FROM ( SELECT ROUTE_CODE,
                                      SUM_L
                                 FROM UNI_ROUTE_ST
                        WHERE 1=1
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                    ) UNI
                    JOIN
                    ( SELECT 
                    		 CELL10A.ROUTE_CODE
                    		,SUM(CELL10A.ROAD_L) AS SUM_LEN
                        FROM CELL_10 CELL10A
                       WHERE CELL10A.ROAD_GRAD = 'RDGD0001'
                       GROUP BY CELL10A.ROUTE_CODE
                    ) C10A
                    ON UNI.ROUTE_CODE = C10A.ROUTE_CODE
              ) AS SUB_NJB
                       
              UNION ALL
              
             SELECT ROAD_NAME, LEN, SUM_LEN
               FROM ( SELECT 
               				'지방도' AS ROAD_NAME
                            ,(SUM(UNI.SUM_L) / 1000) AS LEN
                            ,(SUM(SUM_LEN)   / 1000) AS SUM_LEN
                        FROM ( SELECT ROUTE_CODE,
                                      SUM_L
                                 FROM UNI_ROUTE_ST
                                 WHERE 1=1
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                  ) UNI
                  JOIN
                  ( SELECT 
                  			CELL10A.ROUTE_CODE
                  			,SUM(CELL10A.ROAD_L) AS SUM_LEN
                      FROM CELL_10 CELL10A
                     WHERE CELL10A.ROAD_GRAD = 'RDGD0002'
                     GROUP BY CELL10A.ROUTE_CODE
                  ) C10A
                  ON UNI.ROUTE_CODE = C10A.ROUTE_CODE
              ) AS SUB_JB
        ]]>
    </select>

    <select id="cell10DAO.selectSrvyUniRoutLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectSrvyUniRoutLenStatsResult */
            /* 통계 > 노선현황 > 국토부 노선별 전체 통계 목록을 조회한다. */
               SELECT 
               		UNI.ROUTE_CODE::int AS ROUTE_CODE
                    ,C10A.ROAD_NAME
                    ,(SUM(UNI.SUM_L) / 1000) AS LEN
                    , SUM(SUM_LEN) AS SUM_LEN
               FROM ( SELECT ROUTE_CODE,
                             SUM_L
                        FROM UNI_ROUTE_ST
                       WHERE 1=1
        ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[

                    ) UNI,
                    ( SELECT 
                    		CELL10A.ROUTE_CODE 
                    		,SUM(CELL10A.ROAD_L) AS SUM_LEN
                            ,COALESCE( ( SELECT ROAD_NAME
                                        FROM TN_ROUTE_INFO TNROUTEINFO
                                       WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE),
                              CELL10A.ROUTE_CODE ) AS ROAD_NAME
                         FROM CELL_10 CELL10A
                        WHERE CELL10A.ROAD_GRAD IN('RDGD0001','RDGD0002')
                        GROUP BY CELL10A.ROUTE_CODE) C10A
              WHERE UNI.ROUTE_CODE = C10A.ROUTE_CODE
              GROUP BY UNI.ROUTE_CODE,
                    C10A.ROAD_NAME
              ORDER BY UNI.ROUTE_CODE
        ]]>
    </select>

    <select id="cell10DAO.selectGradLenStatsResultExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectGradLenStatsResultExcel */
            /* 통계 > 노선현황 > 도로등급 통계 엑셀목록을 조회한다. */
               SELECT cell10.ROAD_GRAD,
                    ( SELECT CODE_NM FROM TC_CODE tccode WHERE tccode.CODE_VAL = cell10.ROAD_GRAD) AS ROAD_NAME,
                    SUM(ROAD_L) AS LEN
               FROM CELL_10 cell10
              WHERE 1 = 1
                AND cell10.ROAD_GRAD IS NOT NULL
              GROUP BY cell10.ROAD_GRAD
              ORDER BY ROAD_NAME
        ]]>
    </select>

    <select id="cell10DAO.selectRoutStatsPageList"  parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
            /* cell10DAO.selectRoutStatsPageList */
            /* 통계 > 노선현황 > 노선별 통계 목록을 조회한다. */
             SELECT *
               FROM ( SELECT '국지도' AS ROAD_GRAD,
                             NJD.ROUTE_CODE,
                             C10A.ROUTE_NAME,
                             NJD.SUM_L,
                             NJD.OP_L,
                             NJD.NOP_L,
                             C10A.SUM_LEN,
                             0 AS NJR_LEN,      /*GPMS 중용구간 국지도*/
                             0 AS JBR_LEN,      /*GPMS 중용구간 지방도*/
                             C10B.UNTRACK_LEN
                        FROM ( SELECT ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                      SUM_L,
                                      OP_L,
                                      NOP_L
                                 FROM NJB_ROUTE_ST
                                 WHERE 1=1
        ]]>
        <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[

                                 ) NJD
                             INNER JOIN 
                             ( SELECT CELL10A.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                       COALESCE(( SELECT ROAD_NAME  FROM TN_ROUTE_INFO TNROUTEINFO  WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE), CELL10A.ROUTE_CODE::int || '호선') AS ROUTE_NAME,
                                       SUM(ROAD_L) AS SUM_LEN
                                  FROM CELL_10 CELL10A
                                 WHERE CELL10A.ROAD_GRAD = 'RDGD0001' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                                 GROUP BY CELL10A.ROUTE_CODE
                             ) C10A ON NJD.ROUTE_CODE = C10A.ROUTE_CODE
                             LEFT OUTER JOIN
                             ( SELECT CELL10B.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                       SUM(ROAD_L) AS UNTRACK_LEN
                                  FROM CELL_10 CELL10B
                                 WHERE CELL10B.ROAD_GRAD = 'RDGD0001' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                                   AND CELL10B.CELL_TYPE = 'CELT0013'
                                 GROUP BY CELL10B.ROUTE_CODE
                             ) C10B ON NJD.ROUTE_CODE = C10B.ROUTE_CODE
                       ORDER BY NJD.ROUTE_CODE
                   ) AS SUB_NJB
                   
              UNION ALL
              
             SELECT *
               FROM ( SELECT '지방도' AS ROAD_GRAD,
                             JB.ROUTE_CODE,
                             C10A.ROUTE_NAME,
                             SUM(JB.SUM_L) AS SUM_L,
                             SUM(JB.OP_L) AS OP_L,
                             SUM(JB.NOP_L) AS NOP_L,
                             SUM(C10A.SUM_LEN) AS SUM_LEN,
                             SUM(0) AS NJR_LEN,     /*GPMS 중용구간 국지도*/
                             SUM(0) AS JBR_LEN,     /*GPMS 중용구간 지방도*/
                             SUM(C10B.UNTRACK_LEN) AS UNTRACK_LEN
                        FROM ( SELECT ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                      SUM_L,
                                      OP_L,
                                      NOP_L
                                 FROM JB_ROUTE_ST
                                 WHERE 1=1
        ]]>
        <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                                 ) JB
                             INNER JOIN
                             ( SELECT CELL10A.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                       COALESCE(( SELECT ROAD_NAME  FROM TN_ROUTE_INFO TNROUTEINFO  WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE), CELL10A.ROUTE_CODE::int || '호선') AS ROUTE_NAME,
                                       SUM(ROAD_L) AS SUM_LEN
                                  FROM CELL_10 CELL10A
                                 WHERE CELL10A.ROAD_GRAD = 'RDGD0002' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                                 GROUP BY CELL10A.ROUTE_CODE
                             ) C10A ON JB.ROUTE_CODE = C10A.ROUTE_CODE
                             LEFT OUTER JOIN
                             ( SELECT CELL10B.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                       SUM(ROAD_L) AS UNTRACK_LEN
                                  FROM CELL_10 CELL10B
                                 WHERE CELL10B.ROAD_GRAD = 'RDGD0002' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                                   AND CELL10B.CELL_TYPE = 'CELT0013'
                                 GROUP BY CELL10B.ROUTE_CODE
                             ) C10B ON JB.ROUTE_CODE = C10B.ROUTE_CODE
                       GROUP BY JB.ROUTE_CODE,C10A.ROUTE_NAME
                       ORDER BY JB.ROUTE_CODE
                   ) AS SUB_JB
    ]]>
        </select>

    <select id="cell10DAO.selectRoutNjrStatsExcelResult" parameterClass="cell10VO" resultClass="hashmap">
    <![CDATA[
        /* cell10DAO.selectRoutNjrStatsExcelResult */
        /* 노선별 도로연장 국지도 통계 엑셀 목록 조회*/
        SELECT '국지도' AS ROAD_GRAD,
                 COALESCE(NJD.ROUTE_CODE,'') AS ROUTE_CODE,
                 COALESCE(C10A.ROUTE_NAME,'')AS ROUTE_NAME,
                 COALESCE(NJD.SUM_L,0) AS SUM_L,
                 COALESCE(NJD.OP_L,0) AS OP_L ,
                 COALESCE(NJD.NOP_L,0) AS NOP_L,
                 COALESCE(C10A.SUM_LEN,0) AS SUM_LEN,
                 0 AS NJR_LEN,      /*GPMS 중용구간 국지도*/
                 0 AS JBR_LEN,      /*GPMS 중용구간 지방도*/
                 COALESCE(C10B.UNTRACK_LEN,0) AS UNTRACK_LEN
            FROM ( SELECT ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                          SUM_L,
                          OP_L,
                          NOP_L
                     FROM NJB_ROUTE_ST
                     WHERE 1=1
]]>
<isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
<![CDATA[
                     ) NJD
                 INNER JOIN
                 ( SELECT CELL10A.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                           COALESCE(( SELECT ROAD_NAME  FROM TN_ROUTE_INFO TNROUTEINFO  WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE), CELL10A.ROUTE_CODE::int || '호선') AS ROUTE_NAME,
                           SUM(ROAD_L) AS SUM_LEN
                      FROM CELL_10 CELL10A
                     WHERE CELL10A.ROAD_GRAD = 'RDGD0001' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                     GROUP BY CELL10A.ROUTE_CODE
                 ) C10A ON NJD.ROUTE_CODE = C10A.ROUTE_CODE
                 LEFT OUTER JOIN
                 ( SELECT CELL10B.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                           SUM(ROAD_L) AS UNTRACK_LEN
                      FROM CELL_10 CELL10B
                     WHERE CELL10B.ROAD_GRAD = 'RDGD0001' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                       AND CELL10B.CELL_TYPE = 'CELT0013'
                     GROUP BY CELL10B.ROUTE_CODE
                 ) C10B ON NJD.ROUTE_CODE = C10B.ROUTE_CODE
           ORDER BY NJD.ROUTE_CODE
    ]]>
</select>

    <select id="cell10DAO.selectRoutNjrAllStatsExcelResult" parameterClass="cell10VO" resultClass="hashmap">
    <![CDATA[
        /* cell10DAO.selectRoutNjrAllStatsExcelResult */
        /* 노선별 도로연장 국지도 전체 통계 조회*/
         SELECT ROAD_GRAD,
                SUM(SUM_L) AS SUM_L,
                SUM(OP_L) AS OP_L,
                SUM(NOP_L) AS NOP_L,
                SUM(SUM_LEN) AS SUM_LEN,
                SUM(NJR_LEN) AS NJR_LEN,
                SUM(JBR_LEN) AS JBR_LEN,
                SUM(UNTRACK_LEN) AS UNTRACK_LEN
           FROM ( SELECT '국지도' AS ROAD_GRAD,
                         COALESCE(NJD.ROUTE_CODE,'') AS ROUTE_CODE,
                         COALESCE(C10A.ROUTE_NAME,'') AS ROUTE_NAME,
                         COALESCE(NJD.SUM_L,0) AS SUM_L,
                         COALESCE(NJD.OP_L,0) AS OP_L,
                         COALESCE(NJD.NOP_L,0) AS NOP_L,
                         COALESCE(C10A.SUM_LEN,0) AS SUM_LEN,
                         0 AS NJR_LEN,      /*GPMS 중용구간 국지도*/
                         0 AS JBR_LEN,      /*GPMS 중용구간 지방도*/
                         C10B.UNTRACK_LEN AS UNTRACK_LEN
                    FROM ( SELECT ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                                  SUM_L,
                                  OP_L,
                                  NOP_L
                             FROM NJB_ROUTE_ST
                            WHERE 1=1
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[
                ) NJD
                INNER JOIN
                 ( SELECT CELL10A.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                           COALESCE( ( SELECT ROAD_NAME
                                     FROM TN_ROUTE_INFO TNROUTEINFO
                                    WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE),
                           CELL10A.ROUTE_CODE::int || '호선') AS ROUTE_NAME,
                           SUM(ROAD_L) AS SUM_LEN
                      FROM CELL_10 CELL10A
                     WHERE CELL10A.ROAD_GRAD = 'RDGD0001' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                     GROUP BY CELL10A.ROUTE_CODE
                 ) C10A ON NJD.ROUTE_CODE = C10A.ROUTE_CODE
                 LEFT OUTER JOIN
                 ( SELECT CELL10B.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                           SUM(ROAD_L) AS UNTRACK_LEN
                      FROM CELL_10 CELL10B
                     WHERE CELL10B.ROAD_GRAD = 'RDGD0001' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                       AND CELL10B.CELL_TYPE = 'CELT0013'
                     GROUP BY CELL10B.ROUTE_CODE
                 ) C10B ON NJD.ROUTE_CODE = C10B.ROUTE_CODE
                   ORDER BY NJD.ROUTE_CODE
            ) AS SUB_SUM
            GROUP BY ROAD_GRAD
    ]]>
</select>
    <select id="cell10DAO.selectRoutJbStatsExcelResult" parameterClass="cell10VO" resultClass="hashmap">
    <![CDATA[
        /* cell10DAO.selectRoutJbStatsExcelResult */
        /* 노선별 도로연장 지방도 통계 조회*/
          SELECT '지방도' AS ROAD_GRAD,
                 COALESCE(JB.ROUTE_CODE,'') AS ROUTE_CODE,
                 COALESCE(C10A.ROUTE_NAME, '') AS ROUTE_NAME,
                 COALESCE(SUM(JB.SUM_L),0) AS SUM_L,
                 COALESCE(SUM(JB.OP_L),0) AS OP_L,
                 COALESCE(SUM(JB.NOP_L),0) AS NOP_L,
                 COALESCE(SUM(C10A.SUM_LEN),0) AS SUM_LEN,
                 0 AS NJR_LEN,      /*GPMS 중용구간 국지도*/
                 0 AS JBR_LEN,      /*GPMS 중용구간 지방도*/
                 COALESCE(SUM(C10B.UNTRACK_LEN),0) AS UNTRACK_LEN
            FROM ( SELECT ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                          SUM_L,
                          OP_L,
                          NOP_L
                     FROM JB_ROUTE_ST
                    WHERE 1=1
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[

                 ) JB
                 INNER JOIN
                 ( SELECT CELL10A.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                           COALESCE(( SELECT ROAD_NAME  FROM TN_ROUTE_INFO TNROUTEINFO  WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE), CELL10A.ROUTE_CODE::int || '호선') AS ROUTE_NAME,
                           SUM(ROAD_L) AS SUM_LEN
                      FROM CELL_10 CELL10A
                     WHERE CELL10A.ROAD_GRAD = 'RDGD0002' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                     GROUP BY CELL10A.ROUTE_CODE
                 ) C10A ON JB.ROUTE_CODE = C10A.ROUTE_CODE
                 LEFT OUTER JOIN
                 ( SELECT CELL10B.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                           SUM(ROAD_L) AS UNTRACK_LEN
                      FROM CELL_10 CELL10B
                     WHERE CELL10B.ROAD_GRAD = 'RDGD0002' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                       AND CELL10B.CELL_TYPE = 'CELT0013'
                     GROUP BY CELL10B.ROUTE_CODE
                 ) C10B ON JB.ROUTE_CODE = C10B.ROUTE_CODE
           GROUP BY JB.ROUTE_CODE, C10A.ROUTE_NAME
           ORDER BY JB.ROUTE_CODE
    ]]>
</select>
    <select id="cell10DAO.selectRoutJbAllStatsExcelResult" parameterClass="cell10VO" resultClass="hashmap">
    <![CDATA[
        /* cell10DAO.selectRoutJbAllStatsExcelResult */
        /* 노선별 도로연장 지방도 전체 통계 조회*/
        SELECT ROAD_GRAD,
                SUM(SUM_L) AS SUM_L,
                SUM(OP_L) AS OP_L,
                SUM(NOP_L) AS NOP_L,
                SUM(SUM_LEN) AS SUM_LEN,
                SUM(NJR_LEN) AS NJR_LEN,
                SUM(JBR_LEN) AS JBR_LEN,
                SUM(UNTRACK_LEN) AS UNTRACK_LEN
           FROM (
              SELECT '지방도' AS ROAD_GRAD,
                     COALESCE(JB.ROUTE_CODE,'') AS ROUTE_CODE,
                     COALESCE(C10A.ROUTE_NAME,'')AS ROUTE_NAME,
                     COALESCE(JB.SUM_L,0) AS SUM_L,
                     COALESCE(JB.OP_L,0) AS OP_L ,
                     COALESCE(JB.NOP_L,0) AS NOP_L,
                     COALESCE(C10A.SUM_LEN,0) AS SUM_LEN,
                     0 AS NJR_LEN,      /*GPMS 중용구간 국지도*/
                     0 AS JBR_LEN,      /*GPMS 중용구간 지방도*/
                     COALESCE(C10B.UNTRACK_LEN,0) AS UNTRACK_LEN
               FROM ( SELECT ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                             SUM_L,
                             OP_L,
                             NOP_L
                        FROM JB_ROUTE_ST
                     WHERE 1=1
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                    ) JB
                    INNER JOIN
                    ( SELECT CELL10A.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                               COALESCE(( SELECT ROAD_NAME  FROM TN_ROUTE_INFO TNROUTEINFO  WHERE TNROUTEINFO.ROAD_NO = CELL10A.ROUTE_CODE), CELL10A.ROUTE_CODE::int || '호선') AS ROUTE_NAME,
                              SUM(ROAD_L) AS SUM_LEN
                         FROM CELL_10 CELL10A
                        WHERE CELL10A.ROAD_GRAD = 'RDGD0002' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                        GROUP BY CELL10A.ROUTE_CODE
                    ) C10A ON JB.ROUTE_CODE = C10A.ROUTE_CODE
                    LEFT OUTER JOIN
                    ( SELECT CELL10B.ROUTE_CODE::int || '호선' AS ROUTE_CODE,
                              SUM(ROAD_L) AS UNTRACK_LEN
                         FROM CELL_10 CELL10B
                        WHERE CELL10B.ROAD_GRAD = 'RDGD0002' /*RDGD0001 : 국지도 RDGD0002 : 지방도*/
                          AND CELL10B.CELL_TYPE = 'CELT0013'
                        GROUP BY CELL10B.ROUTE_CODE
                    ) C10B ON JB.ROUTE_CODE = C10B.ROUTE_CODE
              ORDER BY JB.ROUTE_CODE
          ) AS SUB_SUM
          GROUP BY ROAD_GRAD
    ]]>
</select>

    <select id="cell10DAO.selectDeptStatsPageList"  parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
            /* cell10DAO.selectDeptStatsPageList */
            /* 통계 > 노선현황 > 관리기관별 통계 목록을 조회한다. */
              SELECT *
               FROM ( SELECT C10A.DEPT_NM,
                             0 AS SUM_L,
                             0 AS OP_L,
                             0 AS NOP_L,
                             COALESCE(C10A.SUM_LEN,0) AS SUM_LEN,
                             COALESCE(NJR.NJR_LEN,0) AS NJR_LEN,
                             COALESCE(JBR.JBR_LEN,0) AS JBR_LEN,
                             COALESCE(C10B.UNTRACK_LEN,0) AS UNTRACK_LEN
                        FROM ( SELECT CELL10A.DEPT_CODE,
                                      ( SELECT LOWEST_DEPT_NM
                                           FROM TC_DEPT TCDEPT
                                          WHERE TCDEPT.DEPT_CODE::int = CELL10A.DEPT_CODE) AS DEPT_NM,
                                      SUM(ROAD_L) AS SUM_LEN
                                 FROM CELL_10 CELL10A
                                WHERE CELL10A.DEPT_CODE IN('6411399',
                                      '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
                                GROUP BY CELL10A.DEPT_CODE) C10A,
                             ( SELECT 0 AS NJR_LEN
                                  ) NJR,/*GPMS 중용구간 국지도*/
                             ( SELECT 0 AS JBR_LEN
                                  ) JBR,/*GPMS 중용구간 지방도*/
                             ( SELECT CELL10B.DEPT_CODE,
                                       SUM(ROAD_L) AS UNTRACK_LEN
                                  FROM CELL_10 CELL10B
                                 WHERE CELL10B.DEPT_CODE IN('6411399',
                                       '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
                                   AND CELL10B.CELL_TYPE = 'CELT0013'
                                 GROUP BY CELL10B.DEPT_CODE) C10B
                       WHERE C10A.DEPT_CODE = C10B.DEPT_CODE
                       ORDER BY C10A.DEPT_NM DESC ) AS SUB_DEPT
                       
              UNION ALL
              
             SELECT '경기도 건설 본부 전체' AS DEPT_NM,
                    COALESCE(SUM(UNI.SUM_L),0) AS SUM_L,
                    COALESCE(SUM(UNI.OP_L),0) AS OP_L,
                    COALESCE(SUM(UNI.NOP_L),0) AS NOP_L,
                    COALESCE(SUM(C10A.SUM_LEN),0) AS SUM_LEN,
                    COALESCE(SUM(NJR.NJR_LEN),0) AS NJR_LEN,
                    COALESCE(SUM(JBR.JBR_LEN),0) AS JBR_LEN,
                    COALESCE(SUM(C10B.UNTRACK_LEN),0) AS UNTRACK_LEN
               FROM ( SELECT MGN_CODE,
                             SUM_L,
                             OP_L,
                             NOP_L
                        FROM UNI_MGN_ST UNIMGNST
                       WHERE UNIMGNST.MGN_CODE = '6411000'
    ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
    <![CDATA[
                       ) UNI,
                    ( SELECT SUM(ROAD_L) AS SUM_LEN
                         FROM CELL_10 CELL10A
                        WHERE CELL10A.DEPT_CODE IN('6411399',
                              '6411799') /* 6411399:도로건설과/6411799:북부도로과 */ ) C10A,
                    ( SELECT 0 AS NJR_LEN
                         ) NJR,/*GPMS 중용구간 국지도*/
                    ( SELECT 0 AS JBR_LEN
                         ) JBR,/*GPMS 중용구간 지방도*/
                    ( SELECT SUM(ROAD_L) AS UNTRACK_LEN
                         FROM CELL_10 CELL10B
                        WHERE CELL10B.DEPT_CODE IN('6411399',
                              '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
                          AND CELL10B.CELL_TYPE = 'CELT0013') C10B
        ]]>
        </select>

    <select id="cell10DAO.selectDeptStatsPageListExcel" parameterClass="cell10VO" resultClass="hashmap">
    <![CDATA[
        /* cell10DAO.selectDeptStatsPageListExcel */
        /* 통계 > 노선현황 > 관리기관별 통계 엑셀 목록을 조회한다. */
        SELECT *
               FROM ( SELECT C10A.DEPT_NM,
                             0 AS SUM_L,
                             0 AS OP_L,
                             0 AS NOP_L,
                             COALESCE(C10A.SUM_LEN,0) AS SUM_LEN,
                             COALESCE(NJR.NJR_LEN,0) AS NJR_LEN,
                             COALESCE(JBR.JBR_LEN,0) AS JBR_LEN,
                             COALESCE(C10B.UNTRACK_LEN,0) AS UNTRACK_LEN
                        FROM ( SELECT CELL10A.DEPT_CODE,
                                      ( SELECT LOWEST_DEPT_NM
                                           FROM TC_DEPT TCDEPT
                                          WHERE TCDEPT.DEPT_CODE::int = CELL10A.DEPT_CODE) AS DEPT_NM,
                                      SUM(ROAD_L) AS SUM_LEN
                                 FROM CELL_10 CELL10A
                                WHERE CELL10A.DEPT_CODE IN('6411399',
                                      '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
                                GROUP BY CELL10A.DEPT_CODE) C10A,
                             ( SELECT 0 AS NJR_LEN
                                  ) NJR,/*GPMS 중용구간 국지도*/
                             ( SELECT 0 AS JBR_LEN
                                  ) JBR,/*GPMS 중용구간 지방도*/
                             ( SELECT CELL10B.DEPT_CODE,
                                       SUM(ROAD_L) AS UNTRACK_LEN
                                  FROM CELL_10 CELL10B
                                 WHERE CELL10B.DEPT_CODE IN('6411399',
                                       '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
                                   AND CELL10B.CELL_TYPE = 'CELT0013'
                                 GROUP BY CELL10B.DEPT_CODE) C10B
                       WHERE C10A.DEPT_CODE = C10B.DEPT_CODE
                       ORDER BY C10A.DEPT_NM DESC ) AS SUB_DEPT
                       
              UNION ALL
              
             SELECT '경기도 건설 본부 전체' AS DEPT_NM,
                    COALESCE(SUM(UNI.SUM_L),0) AS SUM_L,
                    COALESCE(SUM(UNI.OP_L),0) AS OP_L,
                    COALESCE(SUM(UNI.NOP_L),0) AS NOP_L,
                    COALESCE(SUM(C10A.SUM_LEN),0) AS SUM_LEN,
                    COALESCE(SUM(NJR.NJR_LEN),0) AS NJR_LEN,
                    COALESCE(SUM(JBR.JBR_LEN),0) AS JBR_LEN,
                    COALESCE(SUM(C10B.UNTRACK_LEN),0) AS UNTRACK_LEN
               FROM ( SELECT MGN_CODE,
                             SUM_L,
                             OP_L,
                             NOP_L
                        FROM UNI_MGN_ST UNIMGNST
                       WHERE UNIMGNST.MGN_CODE = '6411000'
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[
                       ) UNI,
                    ( SELECT SUM(ROAD_L) AS SUM_LEN
                         FROM CELL_10 CELL10A
                        WHERE CELL10A.DEPT_CODE IN('6411399',
                              '6411799') /* 6411399:도로건설과/6411799:북부도로과 */ ) C10A,
                    ( SELECT 0 AS NJR_LEN
                         ) NJR,/*GPMS 중용구간 국지도*/
                    ( SELECT 0 AS JBR_LEN
                         ) JBR,/*GPMS 중용구간 지방도*/
                    ( SELECT SUM(ROAD_L) AS UNTRACK_LEN
                         FROM CELL_10 CELL10B
                        WHERE CELL10B.DEPT_CODE IN('6411399',
                              '6411799') /* 6411399:도로건설과/6411799:북부도로과 */
                          AND CELL10B.CELL_TYPE = 'CELT0013') C10B
    ]]>
</select>

        <select id="cell10DAO.selectTrackLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
            <![CDATA[
                /* cell10DAO.selectTrackLenStatsResult */
                /* 통계 > 노선현황 > 차로별 GPMS 총연장 통계*/
                   SELECT TBA.TRACK, COALESCE(TBB.LEN,0) AS LEN
				   FROM (WITH TTB AS ( SELECT 2 C1, 4 C2, 6 C3, 8 C4, 10 C5)  
	  								   SELECT LV, case LV when 2 then C1 when 4 then C2 when 6 then C3 when 8 then C4 when 10 then C5 end TRACK /*차로*/
      					               FROM TTB, ( SELECT generate_series(1,10)as LV )as sub_TrackLenStats
      					               ORDER BY LV) TBA 
				   LEFT JOIN ( SELECT CELL10.TRACK, SUM(ROAD_L) / 1000 AS LEN
            				   FROM CELL_10 CELL10
            				   WHERE 1 = 1
            				   AND CELL10.TRACK IN('2', '4', '6', '8', '10')
                               GROUP BY CELL10.TRACK) TBB
 				   ON TBA.TRACK = TBB.TRACK::int
            ]]>
        </select>

        <select id="cell10DAO.selectUniTrackLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
            <![CDATA[
                /* cell10DAO.selectUniTrackLenStatsResultt */
                /* 통계 > 노선현황 > 차로별 국토부 총연장 통계*/
                   WITH TEST AS ( SELECT (TRACK2_L/1000) C1,
                       (TRACK4_L/1000) C2,
                       (TRACK6_L/1000) C3,
                       (TRACK8_L/1000) C4,
                       (TRACK10_L/1000) C5
                  FROM UNI_MGN_ST
                 WHERE MGN_CODE = '6411000'
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
 				) SELECT LV AS TRACK,/*차로*/
                   		 case LV when 2 then C1 when 4 then C2 when 6 then C3 when 8 then C4 when 10 then C5 end LEN/*연장*/
                  FROM TEST,( SELECT generate_series(1,10) as LV)as sub_UniTrackLenStats
                  ORDER BY LV
            ]]>
        </select>


        <select id="cell10DAO.selectTrackLenStatsResultExcel" parameterClass="cell10VO" resultClass="hashMap">
            <![CDATA[
                /* cell10DAO.selectTrackLenStatsResultExcel */
                /* 통계 > 노선현황 > 차로별 GPMS 통계 엑셀 목록을 조회한다.*/
                  SELECT cell10.TRACK,
                        SUM(ROAD_L) AS LEN
                   FROM CELL_10 cell10
                  WHERE 1 = 1
                  GROUP BY cell10.TRACK
                  ORDER BY TRACK
            ]]>
        </select>

        <select id="cell10DAO.selectTrakStatsPageList" parameterClass="cell10VO" resultClass="cell10VO">
            <![CDATA[
                /* cell10DAO.selectTrakStatsPageList */
                /* 통계 > 노선현황 > 차로별 통계 목록을 조회한다.*/
                  SELECT ADM_NM,
                        COALESCE(ROAD_GRAD,'전체') AS ROAD_GRAD,
                        SUM(SUM_L) AS SUM_L,
                        SUM(TRACK2_L) AS TRACK2_L,
                        SUM(TRACK4_L) AS TRACK4_L,
                        SUM(TRACK6_L) AS TRACK6_L,
                        SUM(TRACK8_L) AS TRACK8_L,
                        SUM(TRACK10_L) AS TRACK10_L,
                        SUM(SUM_G) AS SUM_LEN,
                        SUM(TRACK2) AS TRACK2,
                        SUM(TRACK4) AS TRACK4,
                        SUM(TRACK6) AS TRACK6,
                        SUM(TRACK8) AS TRACK8,
                        SUM(TRACK10) AS TRACK10,
                        SUM(JR_LEN) AS JR_LEN
              FROM ( SELECT NGA.ADM_NM,
                             COALESCE(NJB.ROAD_GRAD,'국지도') AS ROAD_GRAD,
                             COALESCE(NJB.SUM_L,0) AS SUM_L,
                             COALESCE(TRACK2_L,0) AS TRACK2_L,
                             COALESCE(TRACK4_L,0) AS TRACK4_L,
                             COALESCE(TRACK6_L,0) AS TRACK6_L,
                             COALESCE(TRACK8_L,0) AS TRACK8_L,
                             COALESCE(TRACK10_L,0) AS TRACK10_L,
                             COALESCE(C10A.SUM_G,0) AS SUM_G,
                             COALESCE(C10A.TRACK2,0) AS TRACK2,
                             COALESCE(C10A.TRACK4,0) AS TRACK4,
                             COALESCE(C10A.TRACK6,0) AS TRACK6,
                             COALESCE(C10A.TRACK8,0) AS TRACK8,
                             COALESCE(C10A.TRACK10,0) AS TRACK10,
                             0 AS JR_LEN /*중용구간*/
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGA
                        LEFT OUTER JOIN
                             ( SELECT '국지도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ADM_NAME,
                                       SUM_L,
                                       TRACK2_L,
                                       TRACK4_L,
                                       TRACK6_L,
                                       TRACK8_L,
                                       TRACK10_L
                                  FROM NJB_ADM_ST
                                  WHERE 1=1
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[
                                  ) NJB
                          ON NGA.BJCD = NJB.ADM_CODE
                          LEFT OUTER JOIN
                             ( SELECT ADM_CODE,
                                       (TRACK2 + TRACK4 + TRACK6 + TRACK8 + TRACK10 + ODD_L) AS SUM_G,
                                       TRACK2,
                                       TRACK4,
                                       TRACK6,
                                       TRACK8,
                                       TRACK10
                                  FROM ( SELECT ADM_CODE || '00000' AS ADM_CODE,
                                                COALESCE(SUM(TRACK2),0) AS TRACK2,
                                                COALESCE(SUM(TRACK4),0) AS TRACK4,
                                                COALESCE(SUM(TRACK6),0) AS TRACK6,
                                                COALESCE(SUM(TRACK8),0) AS TRACK8,
                                                COALESCE(SUM(TRACK10),0) AS TRACK10,
                                                COALESCE(SUM(ODD_L),0) AS ODD_L
                                           FROM ( SELECT ADM_CODE,
                                                         CASE WHEN TRACK = '2' THEN ROAD_L END AS TRACK2,
                                                         CASE WHEN TRACK = '4' THEN ROAD_L END AS TRACK4,
                                                         CASE WHEN TRACK = '6' THEN ROAD_L END AS TRACK6,
                                                         CASE WHEN TRACK = '8' THEN ROAD_L END AS TRACK8,
                                                         CASE WHEN TRACK = '10' THEN ROAD_L END AS TRACK10,
                                                         CASE WHEN TRACK NOT IN('2','4','6','8','10') THEN ROAD_L  END  AS ODD_L
                                                    FROM CELL_10 CELL10A
                                                   WHERE CELL10A.ROAD_GRAD = 'RDGD0001') AS SUB_CELL10
                                          GROUP BY ADM_CODE ) AS SUB_C10A
                              ) C10A
                          ON NGA.BJCD = C10A.ADM_CODE

                       UNION ALL

                      SELECT NGB.ADM_NM,
                             COALESCE(JB.ROAD_GRAD,'지방도') AS ROAD_GRAD,
                             COALESCE(JB.SUM_L,0) AS SUM_L,
                             COALESCE(TRACK2_L,0) AS TRACK2_L,
                             COALESCE(TRACK4_L,0) AS TRACK4_L,
                             COALESCE(TRACK6_L,0) AS TRACK6_L,
                             COALESCE(TRACK8_L,0) AS TRACK8_L,
                             COALESCE(TRACK10_L,0) AS TRACK10_L,
                             COALESCE(C10A.SUM_G,0) AS SUM_G,
                             COALESCE(C10A.TRACK2,0) AS TRACK2,
                             COALESCE(C10A.TRACK4,0) AS TRACK4,
                             COALESCE(C10A.TRACK6,0) AS TRACK6,
                             COALESCE(C10A.TRACK8,0) AS TRACK8,
                             COALESCE(C10A.TRACK10,0) AS TRACK10,
                             0 AS JR_LEN /*중용구간*/
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGB
                        LEFT OUTER JOIN
                             ( SELECT '지방도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ADM_NAME,
                                       SUM_L,
                                       TRACK2_L,
                                       TRACK4_L,
                                       TRACK6_L,
                                       TRACK8_L,
                                       TRACK10_L
                                  FROM JB_ADM_ST
                                 WHERE 1=1
                ]]>
                    <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
                <![CDATA[
                                  ) JB
                          ON NGB.BJCD = JB.ADM_CODE
                          LEFT OUTER JOIN
                             ( SELECT ADM_CODE,
                                       (TRACK2 + TRACK4 + TRACK6 + TRACK8 + TRACK10 + ODD_L) AS SUM_G,
                                       TRACK2,
                                       TRACK4,
                                       TRACK6,
                                       TRACK8,
                                       TRACK10
                                  FROM ( SELECT ADM_CODE || '00000' AS ADM_CODE,
                                                COALESCE(SUM(TRACK2),0) AS TRACK2,
                                                COALESCE(SUM(TRACK4),0) AS TRACK4,
                                                COALESCE(SUM(TRACK6),0) AS TRACK6,
                                                COALESCE(SUM(TRACK8),0) AS TRACK8,
                                                COALESCE(SUM(TRACK10),0) AS TRACK10,
                                                COALESCE(SUM(ODD_L),0) AS ODD_L
                                           FROM ( SELECT ADM_CODE,
                                                         CASE WHEN TRACK = '2' THEN ROAD_L END AS TRACK2,
                                                         CASE WHEN TRACK = '4' THEN ROAD_L END AS TRACK4,
                                                         CASE WHEN TRACK = '6' THEN ROAD_L END AS TRACK6,
                                                         CASE WHEN TRACK = '8' THEN ROAD_L END AS TRACK8,
                                                         CASE WHEN TRACK = '10' THEN ROAD_L END AS TRACK10,
                                                         CASE WHEN TRACK NOT IN('2','4','6','8','10') THEN ROAD_L  END  AS ODD_L
                                                    FROM CELL_10 CELL10A
                                                   WHERE CELL10A.ROAD_GRAD = 'RDGD0002') AS SUB_CELL10
                                          GROUP BY ADM_CODE ) AS SUB_C10A ) C10A
                           ON NGB.BJCD = C10A.ADM_CODE
            ) AS SUB
            GROUP BY  ROLLUP(ADM_NM,ROAD_GRAD)
            /*  HAVING GROUPING_ID(ADM_NM,ROAD_GRAD) IN (0,3)  */
            HAVING ( ADM_NM IS NULL AND ROAD_GRAD IS NULL )             /*  GROUPING_ID(ADM_NM, ROAD_GRAD) = 00 = 0  */
                OR ( ADM_NM IS NOT NULL AND ROAD_GRAD IS NOT NULL )     /*  GROUPING_ID(ADM_NM, ROAD_GRAD) = 11 = 3  */
            ORDER BY ADM_NM, ROAD_GRAD
            ]]>
        </select>

        <select id="cell10DAO.selectTrakStatsPageListExcel" parameterClass="cell10VO" resultClass="hashMap">
            <![CDATA[
                /* cell10DAO.selectTrakStatsPageListExcel */
                /* 통계 > 노선현황 > 차로별  통계 엑셀 목록을 조회한다.*/
                  SELECT COALESCE(ADM_NM,'전체') AS ADM_NM,
                        COALESCE(ROAD_GRAD,'전체') AS ROAD_GRAD,
                        SUM(SUM_L) AS SUM_L,
                        SUM(TRACK2_L) AS TRACK2_L,
                        SUM(TRACK4_L) AS TRACK4_L,
                        SUM(TRACK6_L) AS TRACK6_L,
                        SUM(TRACK8_L) AS TRACK8_L,
                        SUM(TRACK10_L) AS TRACK10_L,
                        SUM(SUM_G) AS SUM_LEN,
                        SUM(TRACK2) AS TRACK2,
                        SUM(TRACK4) AS TRACK4,
                        SUM(TRACK6) AS TRACK6,
                        SUM(TRACK8) AS TRACK8,
                        SUM(TRACK10) AS TRACK10,
                        SUM(JR_LEN) AS JR_LEN
              FROM ( SELECT NGA.ADM_NM,
                             COALESCE(NJB.ROAD_GRAD,'국지도') AS ROAD_GRAD,
                             COALESCE(NJB.SUM_L,0) AS SUM_L,
                             COALESCE(TRACK2_L,0) AS TRACK2_L,
                             COALESCE(TRACK4_L,0) AS TRACK4_L,
                             COALESCE(TRACK6_L,0) AS TRACK6_L,
                             COALESCE(TRACK8_L,0) AS TRACK8_L,
                             COALESCE(TRACK10_L,0) AS TRACK10_L,
                             COALESCE(C10A.SUM_G,0) AS SUM_G,
                             COALESCE(C10A.TRACK2,0) AS TRACK2,
                             COALESCE(C10A.TRACK4,0) AS TRACK4,
                             COALESCE(C10A.TRACK6,0) AS TRACK6,
                             COALESCE(C10A.TRACK8,0) AS TRACK8,
                             COALESCE(C10A.TRACK10,0) AS TRACK10,
                             0 AS JR_LEN /*중용구간*/
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGA
                        LEFT OUTER JOIN
                             ( SELECT '국지도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ADM_NAME,
                                       SUM_L,
                                       TRACK2_L,
                                       TRACK4_L,
                                       TRACK6_L,
                                       TRACK8_L,
                                       TRACK10_L
                                  FROM NJB_ADM_ST
                                  WHERE 1=1
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[
                                  ) NJB
                          ON NGA.BJCD = NJB.ADM_CODE
                          LEFT OUTER JOIN
                             ( SELECT ADM_CODE,
                                       (TRACK2 + TRACK4 + TRACK6 + TRACK8 + TRACK10 + ODD_L) AS SUM_G,
                                       TRACK2,
                                       TRACK4,
                                       TRACK6,
                                       TRACK8,
                                       TRACK10
                                  FROM ( SELECT ADM_CODE || '00000' AS ADM_CODE,
                                                COALESCE(SUM(TRACK2),0) AS TRACK2,
                                                COALESCE(SUM(TRACK4),0) AS TRACK4,
                                                COALESCE(SUM(TRACK6),0) AS TRACK6,
                                                COALESCE(SUM(TRACK8),0) AS TRACK8,
                                                COALESCE(SUM(TRACK10),0) AS TRACK10,
                                                COALESCE(SUM(ODD_L),0) AS ODD_L
                                           FROM ( SELECT ADM_CODE,
                                                         CASE WHEN TRACK = '2' THEN ROAD_L END AS TRACK2,
                                                         CASE WHEN TRACK = '4' THEN ROAD_L END AS TRACK4,
                                                         CASE WHEN TRACK = '6' THEN ROAD_L END AS TRACK6,
                                                         CASE WHEN TRACK = '8' THEN ROAD_L END AS TRACK8,
                                                         CASE WHEN TRACK = '10' THEN ROAD_L END AS TRACK10,
                                                         CASE WHEN TRACK NOT IN('2','4','6','8','10') THEN ROAD_L  END  AS ODD_L
                                                    FROM CELL_10 CELL10A
                                                   WHERE CELL10A.ROAD_GRAD = 'RDGD0001') AS SUB_CELL10
                                          GROUP BY ADM_CODE ) AS SUB_C10A
                              ) C10A
                          ON NGA.BJCD = C10A.ADM_CODE

                       UNION ALL

                      SELECT NGB.ADM_NM,
                             COALESCE(JB.ROAD_GRAD,'지방도') AS ROAD_GRAD,
                             COALESCE(JB.SUM_L,0) AS SUM_L,
                             COALESCE(TRACK2_L,0) AS TRACK2_L,
                             COALESCE(TRACK4_L,0) AS TRACK4_L,
                             COALESCE(TRACK6_L,0) AS TRACK6_L,
                             COALESCE(TRACK8_L,0) AS TRACK8_L,
                             COALESCE(TRACK10_L,0) AS TRACK10_L,
                             COALESCE(C10A.SUM_G,0) AS SUM_G,
                             COALESCE(C10A.TRACK2,0) AS TRACK2,
                             COALESCE(C10A.TRACK4,0) AS TRACK4,
                             COALESCE(C10A.TRACK6,0) AS TRACK6,
                             COALESCE(C10A.TRACK8,0) AS TRACK8,
                             COALESCE(C10A.TRACK10,0) AS TRACK10,
                             0 AS JR_LEN /*중용구간*/
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGB
                        LEFT OUTER JOIN
                             ( SELECT '지방도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ADM_NAME,
                                       SUM_L,
                                       TRACK2_L,
                                       TRACK4_L,
                                       TRACK6_L,
                                       TRACK8_L,
                                       TRACK10_L
                                  FROM JB_ADM_ST
                                 WHERE 1=1
                ]]>
                    <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
                <![CDATA[
                                  ) JB
                          ON NGB.BJCD = JB.ADM_CODE
                          LEFT OUTER JOIN
                             ( SELECT ADM_CODE,
                                       (TRACK2 + TRACK4 + TRACK6 + TRACK8 + TRACK10 + ODD_L) AS SUM_G,
                                       TRACK2,
                                       TRACK4,
                                       TRACK6,
                                       TRACK8,
                                       TRACK10
                                  FROM ( SELECT ADM_CODE || '00000' AS ADM_CODE,
                                                COALESCE(SUM(TRACK2),0) AS TRACK2,
                                                COALESCE(SUM(TRACK4),0) AS TRACK4,
                                                COALESCE(SUM(TRACK6),0) AS TRACK6,
                                                COALESCE(SUM(TRACK8),0) AS TRACK8,
                                                COALESCE(SUM(TRACK10),0) AS TRACK10,
                                                COALESCE(SUM(ODD_L),0) AS ODD_L
                                           FROM ( SELECT ADM_CODE,
                                                         CASE WHEN TRACK = '2' THEN ROAD_L END AS TRACK2,
                                                         CASE WHEN TRACK = '4' THEN ROAD_L END AS TRACK4,
                                                         CASE WHEN TRACK = '6' THEN ROAD_L END AS TRACK6,
                                                         CASE WHEN TRACK = '8' THEN ROAD_L END AS TRACK8,
                                                         CASE WHEN TRACK = '10' THEN ROAD_L END AS TRACK10,
                                                         CASE WHEN TRACK NOT IN('2','4','6','8','10') THEN ROAD_L  END  AS ODD_L
                                                    FROM CELL_10 CELL10A
                                                   WHERE CELL10A.ROAD_GRAD = 'RDGD0002') AS SUB_CELL10
                                          GROUP BY ADM_CODE ) AS SUB_C10A ) C10A
                           ON NGB.BJCD = C10A.ADM_CODE
            ) AS SUB
            GROUP BY  ROLLUP(ADM_NM,ROAD_GRAD)
            /*  HAVING GROUPING_ID(ADM_NM,ROAD_GRAD) IN (0,3)  */
            HAVING ( ADM_NM IS NULL AND ROAD_GRAD IS NULL )             /*  GROUPING_ID(ADM_NM, ROAD_GRAD) = 00 = 0  */
                OR ( ADM_NM IS NOT NULL AND ROAD_GRAD IS NOT NULL )     /*  GROUPING_ID(ADM_NM, ROAD_GRAD) = 11 = 3  */
            ORDER BY
                ( CASE WHEN ADM_NM IS NULL THEN 999 ELSE 1 END ), ADM_NM, ROAD_GRAD     /* 전체 를 제일 마지막으로 */ 
            ]]>
        </select>

        <select id="cell10DAO.selectAdmLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectAdmLenStatsResult */
            /* 통계 > 노선현황 > 시군구별 GPMS 총연장 통계*/
              SELECT n3ag0100000.BJCD AS ADM_CODE,
                    n3ag0100000.NAME AS ADM_NM,
                    COALESCE(SUM(cell10.ROAD_L) / 1000,0) AS LEN
               FROM N3A_G0100000 n3ag0100000 LEFT OUTER JOIN CELL_10 cell10 ON n3ag0100000.BJCD = cell10.ADM_CODE||'00000'
              GROUP BY n3ag0100000.BJCD, n3ag0100000.NAME
              ORDER BY n3ag0100000.NAME
        ]]>
    </select>

    <select id="cell10DAO.selectUniAdmGradLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectUniAdmGradLenStatsResult */
            /* 통계 > 노선현황 > 차로별 > 국토부 시군구별 도로등급별 총연장 통계*/
              SELECT ADM_NM,
                    COALESCE(ROAD_GRAD,'전체') AS ROAD_GRAD,
                    SUM(SUM_L)/1000 AS LEN
               FROM ( SELECT NGA.ADM_NM,
                             COALESCE(NJB.ROAD_GRAD, '국지도') AS ROAD_GRAD,
                             COALESCE(NJB.SUM_L, 0) AS SUM_L
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGA
                        LEFT JOIN( SELECT '국지도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ADM_NAME,
                                       SUM_L
                                  FROM NJB_ADM_ST
                                 WHERE 1=1
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[
                                  ) NJB
                       ON NGA.BJCD = NJB.ADM_CODE
                       UNION ALL
                      SELECT NGB.ADM_NM,
                             COALESCE(JB.ROAD_GRAD, '지방도') AS ROAD_GRAD,
                             COALESCE(JB.SUM_L, 0) AS SUM_L
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGB
                        LEFT JOIN ( SELECT '지방도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ADM_NAME,
                                       SUM_L
                                  FROM JB_ADM_ST
                                 WHERE 1=1
            ]]>
                <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
            <![CDATA[
                                  ) JB
                       ON NGB.BJCD = JB.ADM_CODE )as sub_UniAdm
              GROUP BY ADM_NM,
                    ROAD_GRAD
              ORDER BY ADM_NM
        ]]>
    </select>

    <select id="cell10DAO.selectAdmGradLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectAdmGradLenStatsResult */
            /* 통계 > 노선현황 > 차로별 > gpms 시군구별 도로등급별 총연장 통계*/
             SELECT ADM_NM,
                    COALESCE(ROAD_GRAD,'전체') AS ROAD_GRAD,
                    SUM(SUM_L) / 1000 AS LEN
               FROM ( SELECT NGA.ADM_NM,
                             COALESCE(C10A.ROAD_GRAD,'국지도') AS ROAD_GRAD,
                             COALESCE(C10A.ROAD_L,0) AS SUM_L
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGA
                        LEFT JOIN( SELECT '국지도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE, ROAD_L
                                  FROM CELL_10
                                 WHERE ROAD_GRAD = 'RDGD0001') C10A
					     ON NGA.BJCD = C10A.ADM_CODE
                       UNION ALL
                      SELECT NGA.ADM_NM,
                             COALESCE(C10A.ROAD_GRAD,'지방도') AS ROAD_GRAD,
                             COALESCE(C10A.ROAD_L,0) AS SUM_L
                        FROM ( SELECT N3A.NAME AS ADM_NM,
                                      N3A.BJCD
                                 FROM N3A_G0100000 N3A) NGA
                        LEFT JOIN( SELECT '지방도' AS ROAD_GRAD,
                                       ADM_CODE || '00000' AS ADM_CODE,
                                       ROAD_L
                                  FROM CELL_10
                                 WHERE ROAD_GRAD = 'RDGD0002') C10A
                       ON NGA.BJCD = C10A.ADM_CODE)as sub_Adm
              GROUP BY ADM_NM,
                    ROAD_GRAD
              ORDER BY ADM_NM
        ]]>
    </select>

    <select id="cell10DAO.selectUniAdmLenStatsResult" parameterClass="cell10VO" resultClass="cell10VO">
        <![CDATA[
            /* cell10DAO.selectUniAdmLenStatsResult */
            /* 통계 > 노선현황 > 시군구별 국토부 총연장 통계*/
               SELECT NGB.ADM_NM,
                    NGB.BJCD,
                    COALESCE(UNI.LEN,0) AS LEN
               FROM ( SELECT N3A.BJCD,
                             N3A.NAME AS ADM_NM
                        FROM N3A_G0100000 N3A) NGB
               LEFT JOIN ( SELECT UNIADMST.ADM_CODE || '00000' AS ADM_CODE,
                             (SUM(UNIADMST.SUM_L) / 1000) AS LEN
                         FROM UNI_ADM_ST UNIADMST
                     WHERE 1=1
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND UNIADMST.STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                        GROUP BY UNIADMST.ADM_CODE) UNI
              ON NGB.BJCD = UNI.ADM_CODE
              ORDER BY NGB.ADM_NM
        ]]>
    </select>

    <select id="cell10DAO.selectAdmLenStatsResultExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectAdmLenStatsResultExcel */
            /* 통계 > 노선현황 > 시군구별 통계(GPMS)를 엑셀 목록 조회한다.*/
             SELECT n3ag0100000.BJCD AS ADM_CODE,
                    n3ag0100000.NAME AS ADM_NM,
                    COALESCE(SUM(cell10.ROAD_L),0) AS LEN
               FROM N3A_G0100000 n3ag0100000 LEFT OUTER JOIN CELL_10 cell10 ON n3ag0100000.BJCD = cell10.ADM_CODE||'00000'
              GROUP BY n3ag0100000.BJCD, n3ag0100000.NAME
              ORDER BY n3ag0100000.NAME
        ]]>
    </select>

    <select id="cell10DAO.selectAdmStatsPageListExcel" parameterClass="cell10VO" resultClass="hashMap">
        <![CDATA[
            /* cell10DAO.selectAdmStatsPageListExcel */
            /* 통계 > 노선현황 > 시군구별 국토부 통계를 엑셀 목록 조회한다.*/
              SELECT COALESCE(NGB.ADM_NM,'전체') AS ADM_NM,
                    COALESCE(SUM(NJD.SUM_L),0) AS SUM_L,
                    COALESCE(SUM(NJD.OP_L),0) AS OP_L,
                    COALESCE(SUM(NJD.NOP_L),0) AS NOP_L,
                    COALESCE(SUM(C10A.SUM_LEN),0) AS SUM_LEN,
                    COALESCE(SUM(NJR.NJR_LEN),0) AS NJR_LEN,
                    COALESCE(SUM(JBR.JBR_LEN),0) AS JBR_LEN,
                    COALESCE(SUM(C10B.UNTRACK_LEN),0) AS UNTRACK_LEN
               FROM ( SELECT N3A.BJCD,N3A.NAME AS ADM_NM
                        FROM N3A_G0100000 N3A
                    ) NGB
                    LEFT OUTER JOIN
                    ( SELECT  ADM_CODE ||'00000' AS ADM_CODE,
                             ADM_NAME AS ADM_NM,
                             SUM_L,
                             OP_L,
                             NOP_L
                        FROM UNI_ADM_ST
                     WHERE 1=1
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                    ) NJD ON NGB.BJCD = NJD.ADM_CODE
                    LEFT OUTER JOIN
                    ( SELECT  ADM_CODE ||'00000' AS ADM_CODE,
                              SUM(ROAD_L) AS SUM_LEN
                         FROM CELL_10 CELL10A
                        GROUP BY CELL10A.ADM_CODE
                    ) C10A ON NJD.ADM_CODE = C10A.ADM_CODE
                    LEFT OUTER JOIN
                    ( SELECT  ADM_CODE ||'00000' AS ADM_CODE,
                              SUM(ROAD_L) AS UNTRACK_LEN
                         FROM CELL_10 CELL10B
                        WHERE CELL10B.CELL_TYPE = 'CELT0013' /*CELT0013 : 미개설구간*/
                        GROUP BY CELL10B.ADM_CODE
                    ) C10B ON NJD.ADM_CODE = C10B.ADM_CODE,
                    ( SELECT 0 AS NJR_LEN
                         ) NJR,/*GPMS 중용구간 국지도*/
                    ( SELECT 0 AS JBR_LEN
                         ) JBR /*GPMS 중용구간 지방도*/
              GROUP BY ROLLUP (NGB.ADM_NM)
              /* HAVING GROUPING_ID(NGB.ADM_NM) IN(0, 1) */
              ORDER BY NGB.ADM_NM
        ]]>
    </select>

    <select id="cell10DAO.selectAdmStatsPageList"  parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
            /* cell10DAO.selectAdmStatsPageList */
            /* 통계 > 노선현황 > 시군구별 통계 목록을 조회한다. */
             SELECT COALESCE(NGB.ADM_NM,'전체') AS ADM_NM,
                    COALESCE(SUM(NJD.SUM_L),0) AS SUM_L,
                    COALESCE(SUM(NJD.OP_L),0) AS OP_L,
                    COALESCE(SUM(NJD.NOP_L),0) AS NOP_L,
                    COALESCE(SUM(C10A.SUM_LEN),0) AS SUM_LEN,
                    COALESCE(SUM(NJR.NJR_LEN),0) AS NJR_LEN,
                    COALESCE(SUM(JBR.JBR_LEN),0) AS JBR_LEN,
                    COALESCE(SUM(C10B.UNTRACK_LEN),0) AS UNTRACK_LEN
               FROM ( SELECT N3A.BJCD,N3A.NAME AS ADM_NM
                      FROM N3A_G0100000 N3A
                    ) NGB
                    LEFT OUTER JOIN
                    ( SELECT  ADM_CODE ||'00000' AS ADM_CODE,
                             ADM_NAME AS ADM_NM,
                             SUM_L,
                             OP_L,
                             NOP_L
                        FROM UNI_ADM_ST
                     WHERE 1=1
        ]]>
            <isNotEmpty property="STATS_YEAR"><![CDATA[ AND STATS_YEAR=#STATS_YEAR# ]]></isNotEmpty>
        <![CDATA[
                    ) NJD ON NGB.BJCD = NJD.ADM_CODE
                    LEFT OUTER JOIN
                    ( SELECT  ADM_CODE ||'00000' AS ADM_CODE,
                              SUM(ROAD_L) AS SUM_LEN
                         FROM CELL_10 CELL10A
                        GROUP BY CELL10A.ADM_CODE
                    ) C10A ON NJD.ADM_CODE = C10A.ADM_CODE
                    LEFT OUTER JOIN
                    ( SELECT  ADM_CODE ||'00000' AS ADM_CODE,
                              SUM(ROAD_L) AS UNTRACK_LEN
                         FROM CELL_10 CELL10B
                        WHERE CELL10B.CELL_TYPE = 'CELT0013' /*CELT0013 : 미개설구간*/
                        GROUP BY CELL10B.ADM_CODE
                    ) C10B ON NJD.ADM_CODE = C10B.ADM_CODE,
                    ( SELECT 0 AS NJR_LEN
                         ) NJR,/*GPMS 중용구간 국지도*/
                    ( SELECT 0 AS JBR_LEN
                         ) JBR /*GPMS 중용구간 지방도*/
              GROUP BY ROLLUP (NGB.ADM_NM)
              /* HAVING GROUPING_ID(NGB.ADM_NM) IN(0, 1) */
              ORDER BY NGB.ADM_NM
    ]]>
        </select>

    <select id="cell10DAO.selectStatsYearList"  parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
            /* cell10DAO.selectStatsYearList */
            /* 통계 > 노선현황 > 검색조건_통계연도조회 */
              SELECT  STATS_YEAR /*통계연도*/
               FROM ( SELECT MAX(STATS_YEAR) AS STATS_YEAR FROM UNI_ROUTE_ST /*국토부총괄 노선별통계*/
                       UNION
                      SELECT MAX(STATS_YEAR) AS STATS_YEAR  FROM UNI_MGN_ST /*국토부총괄 관리기관별통계*/
                       UNION
                      SELECT MAX(STATS_YEAR) AS STATS_YEAR FROM UNI_ADM_ST /*국토부총괄 행정구역별통계*/ ) as sub_uni
            ORDER BY STATS_YEAR

    ]]>
        </select>

    <select id="cell10DAO.selectCellList" parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
        SELECT CELL.CELL_ID ,
		  CELL.ROUTE_CODE ,
		  TNROUTE.ROAD_NAME ,
		  CELL.DIRECT_CODE ,
		  CELL.TRACK ,
		  CELL.STRTPT ,
		  CELL.ENDPT ,
		  /*TNMUMMSCTNSRVYDTA.TRTS_BAC_CR ,
		  TNMUMMSCTNSRVYDTA.VRTCAL_CR ,
		  TNMUMMSCTNSRVYDTA.BLOCK_CR ,
		  TNMUMMSCTNSRVYDTA.HRZNTAL_CR ,
		  TNMUMMSCTNSRVYDTA.PTCHG_CR ,
		  TNMUMMSCTNSRVYDTA.POTHOLE_CR ,
		  TNMUMMSCTNSRVYDTA.RD_VAL ,
		  TNMUMMSCTNSRVYDTA.IRI_VAL*/
		  MAX(SRVY_YEAR) SRVY_YEAR_MAX
          , MIN(SRVY_YEAR) SRVY_YEAR_MIN
		FROM TN_MUMM_SCTN_SRVY_DTA TNMUMMSCTNSRVYDTA
		INNER JOIN CELL_10 CELL
		ON TNMUMMSCTNSRVYDTA.ROUTE_CODE   = CELL.ROUTE_CODE
		AND TNMUMMSCTNSRVYDTA.DIRECT_CODE = CELL.DIRECT_CODE
		AND TNMUMMSCTNSRVYDTA.TRACK       = CELL.TRACK
		AND TNMUMMSCTNSRVYDTA.STRTPT      = CELL.STRTPT
		AND TNMUMMSCTNSRVYDTA.ENDPT       = CELL.ENDPT
		LEFT OUTER JOIN TN_ROUTE_INFO TNROUTE
		ON TNROUTE.ROAD_NO = CELL.ROUTE_CODE
		LEFT OUTER JOIN TC_DEPT TCDEPT
		ON TCDEPT.DEPT_CODE = CELL.DEPT_CODE::text
        WHERE CELL_ID IN
    ]]>

    <iterate open="(" close=")" property="CELL_ID_ARR" conjunction=",">
        <![CDATA[
            #CELL_ID_ARR[]#
        ]]>
    </iterate>

    <![CDATA[
            AND TNMUMMSCTNSRVYDTA.USE_AT = 'Y'
            AND TNMUMMSCTNSRVYDTA.DELETE_AT = 'N'
            AND TNMUMMSCTNSRVYDTA.LAST_DTA_AT = 'Y'
        GROUP BY CELL.CELL_ID ,
			CELL.ROUTE_CODE ,
			TNROUTE.ROAD_NAME ,
			CELL.DIRECT_CODE ,
			CELL.TRACK ,
			CELL.STRTPT ,
			CELL.ENDPT
        ORDER BY
            CELL.ROUTE_CODE
            , CELL.DIRECT_CODE
            , CELL.TRACK
            , CELL.STRTPT
            , CELL.ENDPT
    ]]>
    </select>


    <select id="cell10DAO.selectCellListCnt" parameterClass="cell10VO" resultClass="int">
    <![CDATA[
        SELECT COUNT(*)
        FROM (
        SELECT CELL.CELL_ID ,
		  CELL.ROUTE_CODE ,
		  TNROUTE.ROAD_NAME ,
		  CELL.DIRECT_CODE ,
		  CELL.TRACK ,
		  CELL.STRTPT ,
		  CELL.ENDPT ,
		  /*TNMUMMSCTNSRVYDTA.TRTS_BAC_CR ,
		  TNMUMMSCTNSRVYDTA.VRTCAL_CR ,
		  TNMUMMSCTNSRVYDTA.BLOCK_CR ,
		  TNMUMMSCTNSRVYDTA.HRZNTAL_CR ,
		  TNMUMMSCTNSRVYDTA.PTCHG_CR ,
		  TNMUMMSCTNSRVYDTA.POTHOLE_CR ,
		  TNMUMMSCTNSRVYDTA.RD_VAL ,
		  TNMUMMSCTNSRVYDTA.IRI_VAL*/
		  MAX(SRVY_YEAR) SRVY_YEAR_MAX
            , MIN(SRVY_YEAR) SRVY_YEAR_MIN
		FROM TN_MUMM_SCTN_SRVY_DTA TNMUMMSCTNSRVYDTA
		INNER JOIN CELL_10 CELL
		ON TNMUMMSCTNSRVYDTA.ROUTE_CODE   = CELL.ROUTE_CODE
		AND TNMUMMSCTNSRVYDTA.DIRECT_CODE = CELL.DIRECT_CODE
		AND TNMUMMSCTNSRVYDTA.TRACK       = CELL.TRACK
		AND TNMUMMSCTNSRVYDTA.STRTPT      = CELL.STRTPT
		AND TNMUMMSCTNSRVYDTA.ENDPT       = CELL.ENDPT
		LEFT OUTER JOIN TN_ROUTE_INFO TNROUTE
		ON TNROUTE.ROAD_NO = CELL.ROUTE_CODE
		LEFT OUTER JOIN TC_DEPT TCDEPT
		ON TCDEPT.DEPT_CODE = CELL.DEPT_CODE::text
        WHERE CELL_ID IN
    ]]>

    <iterate open="(" close=")" property="CELL_ID_ARR" conjunction=",">
        <![CDATA[
            #CELL_ID_ARR[]#
        ]]>
    </iterate>

    <![CDATA[
            AND TNMUMMSCTNSRVYDTA.USE_AT = 'Y'
            AND TNMUMMSCTNSRVYDTA.DELETE_AT = 'N'
            AND TNMUMMSCTNSRVYDTA.LAST_DTA_AT = 'Y'
        GROUP BY CELL.CELL_ID ,
			CELL.ROUTE_CODE ,
			TNROUTE.ROAD_NAME ,
			CELL.DIRECT_CODE ,
			CELL.TRACK ,
			CELL.STRTPT ,
			CELL.ENDPT
        ORDER BY
            CELL.ROUTE_CODE
            , CELL.DIRECT_CODE
            , CELL.TRACK
            , CELL.STRTPT
            , CELL.ENDPT
        )as sub_CellList
    ]]>
    </select>

    <select id="cell10DAO.selectCellInfoByLonLat" parameterClass="cell10VO" resultClass="cell10VO">
    <![CDATA[
        /* cell10DAO.selectCellInfoByLonLat */
        /* 경위도 좌표 이동 - cell 정보 조회 */
        SELECT
            cell.CELL_ID
            , cell.ROUTE_CODE
            , tnrouteinfo.ROAD_NAME ROUTE_NAME
            , cell.DIRECT_CODE
            , cell.TRACK
            , cell.STRTPT
            , cell.ENDPT
            , cell.DEPT_CODE
        FROM CELL_10 cell
        LEFT OUTER JOIN TN_ROUTE_INFO tnrouteinfo
            ON tnrouteinfo.ROAD_NO = cell.ROUTE_CODE
        WHERE 1=1
    ]]>
    
	<!-- 추후수정_sdh 
    <isEmpty property="CELL_ID_ARR">
    <![CDATA[
        AND SDO_RELATE (
                  cell.G2_SPATIAL
                  , ( SELECT SDO_CS.TRANSFORM(
                                  SDO_GEOMETRY( 2001, 4326, SDO_POINT_TYPE( #lon#, #lat#, NULL ), NULL, NULL)
                                  , 5181 )
                       )
                  , 'mask=ANYINTERACT'
              ) = 'TRUE'
    ]]>
    </isEmpty>
 	-->
    <isEmpty property="CELL_ID_ARR">
    <![CDATA[
		AND ST_INTERSECTS(
			cell.geom
			,ST_Transform(ST_GeomFromText(concat('POINT(', #lon#, ' ', #lat#, ')'), 4326), 5181)
			
		) =  'true'
    ]]>
    </isEmpty> 	
 	
    <isNotEmpty property="CELL_ID">
    <![CDATA[
        AND cell.CELL_ID = #CELL_ID#
    ]]>
    </isNotEmpty>
    <isNotEmpty property="CELL_ID_ARR">
        AND cell.CELL_ID IN
	    <iterate open="(" close=")" property="CELL_ID_ARR" conjunction=",">
	        <![CDATA[
	            #CELL_ID_ARR[]#
	        ]]>
	    </iterate>
    </isNotEmpty>
    </select>


    <select id="cell10DAO.selectCellInfoByLonLatCnt" parameterClass="cell10VO" resultClass="int">
    <![CDATA[
        /* cell10DAO.selectCellInfoByLonLatCnt */
        /* 경위도 좌표 이동 - cell 정보 조회 Cnt */
        SELECT COUNT(*)
        FROM CELL_10 cell
            WHERE 1=1
    ]]>

	<!-- 추후수정_sdh
    <isEmpty property="CELL_ID_ARR">
    <![CDATA[
        AND SDO_RELATE (
                  cell.G2_SPATIAL
                  , ( SELECT SDO_CS.TRANSFORM(
                                  SDO_GEOMETRY( 2001, 4326, SDO_POINT_TYPE( #lon#, #lat#, NULL ), NULL, NULL)
                                  , 5181 )
                       )
                  , 'mask=ANYINTERACT'
              ) = 'TRUE'
    ]]>
    </isEmpty>
 	-->
    <isEmpty property="CELL_ID_ARR">
    <![CDATA[
		AND ST_INTERSECTS(
			cell.geom
			,ST_Transform(ST_GeomFromText(concat('POINT(', #lon#, ' ', #lat#, ')'), 4326), 5181)
			
		) =  'true'
    ]]>
    </isEmpty>
 	
    <isNotEmpty property="CELL_ID">
    <![CDATA[
        AND cell.CELL_ID = #CELL_ID#
    ]]>
    </isNotEmpty>
    <isNotEmpty property="CELL_ID_ARR">
        AND cell.CELL_ID IN
        <iterate open="(" close=")" property="CELL_ID_ARR" conjunction=",">
            <![CDATA[
                #CELL_ID_ARR[]#
            ]]>
        </iterate>
    </isNotEmpty>

    </select>

</sqlMap>
