<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="srvyDtaDAO">

	<typeAlias alias="egovMap"
		type="egovframework.rte.psl.dataaccess.util.EgovMap" />
	<typeAlias alias="srvyDtaVO"
		type="kr.go.gg.gpms.srvydta.service.model.SrvyDtaVO" />


	<select id="srvyDtaDAO.selectSrvyDtaFrmulaList" resultClass="srvyDtaVO">
		<![CDATA[
		/* srvyDtaDAO.selectSrvyDtaFrmulaList */
		/* 조사_자료_수식 조회 */
			SELECT
				 frmula_no /* 수식_번호 */
				,frmula_nm /* 수식_명 */
				,arith_frmla /* 산술_식 */
				,dc /* 설명 */
				,frmula_se_code /* 수식_구분_코드 */
			FROM TN_SRVY_DTA_FRMULA
			order by frmula_no
		]]>
	</select>

	<insert id="srvyDtaDAO.insertSrvyDta">
		<selectKey resultClass="String" keyProperty="SRVY_NO">
  <![CDATA[
  select nextval('SEQ_TN_SRVY_DTA')
  ]]>
		</selectKey>
	<![CDATA[
		/* srvyDtaDAO.insertSrvyDta */
		/* 조사_자료 등록 */
		INSERT INTO TN_SRVY_DTA (
			SRVY_NO /* 조사_자료_엑셀.조사_번호 */
			, FILE_NO /* 조사_자료_엑셀.파일_번호 */
			, DATA_CO /* 조사_자료_엑셀.데이터_건수 */
			, ROUTE_CODE /* 조사_자료_엑셀.노선_코드 */
			, DIRECT_CODE /* 조사_자료_엑셀.행선_코드 */
			, TRACK /* 조사_자료_엑셀.차로 */
			, STRTPT /* 조사_자료_엑셀.시점 */
			, ENDPT /* 조사_자료_엑셀.종점 */
			, SRVY_DE /* 조사_자료_엑셀.조사_일자 */
			, SRVY_NM /* 조사_자료_엑셀.조사_명 */
			, EXMNR_NM /* 조사_자료_엑셀.조사자_명 */
			, EVL_PROCESS_AT /* 조사_자료_엑셀.평가_처리_여부 */
			, GPS_CORTN_PROCESS_AT /* 조사_자료_엑셀.GPS_보정_처리_여부 */
			, SM_PROCESS_AT /* 조사_자료_엑셀.집계_처리_여부 */
			, PRDTMDL_PROCESS_AT /* 조사_자료_엑셀.예측모델_처리_여부 */
			, VAL_EVL_AT /* 조사_자료_엑셀.유효성_평가_여부 */
			, DELETE_AT /* 조사_자료_엑셀.삭제_여부 */
			, USE_AT /* 조사_자료_엑셀.사용_여부 */
			, CRTR_NO /* 조사_자료_엑셀.생성자_번호 */
			, CREAT_DT /* 조사_자료_엑셀.생성_일시 */
			, UPDUSR_NO /* 조사_자료_엑셀.수정자_번호 */
			, UPDT_DT /* 조사_자료_엑셀.수정_일시 */
		) VALUES (
			#SRVY_NO#::int /* 조사_자료_엑셀.조사_번호 */
			, #FILE_NO#::int /* 조사_자료_엑셀.파일_번호 */
			, #DATA_CO#::int /* 조사_자료_엑셀.데이터_건수 */
			, #ROUTE_CODE# /* 조사_자료_엑셀.노선_코드 */
			, #DIRECT_CODE# /* 조사_자료_엑셀.행선_코드 */
			, #TRACK# /* 조사_자료_엑셀.차로 */
			, #STRTPT#::int /* 조사_자료_엑셀.시점 */
			, #ENDPT#::int /* 조사_자료_엑셀.종점 */
			, #SRVY_DE# /* 조사_자료_엑셀.조사_일자 */
			, #SRVY_NM# /* 조사_자료_엑셀.조사_명 */
			, #EXMNR_NM# /* 조사_자료_엑셀.조사자_명 */
			, #EVL_PROCESS_AT# /* 조사_자료_엑셀.평가_처리_여부 */
			, #GPS_CORTN_PROCESS_AT# /* 조사_자료_엑셀.GPS_보정_처리_여부 */
			, #SM_PROCESS_AT# /* 조사_자료_엑셀.집계_처리_여부 */
			, #PRDTMDL_PROCESS_AT# /* 조사_자료_엑셀.예측모델_처리_여부 */
			, #VAL_EVL_AT# /* 조사_자료_엑셀.유효성_평가_여부 */
			, #DELETE_AT# /* 조사_자료_엑셀.삭제_여부 */
			, #USE_AT# /* 조사_자료_엑셀.사용_여부 */
			, #CRTR_NO#::int /* 조사_자료_엑셀.생성자_번호 */
			, NOW() /* 조사_자료_엑셀.생성_일시 */
			, #UPDUSR_NO#::int /* 조사_자료_엑셀.수정자_번호 */
			, NOW() /* 조사_자료_엑셀.수정_일시 */
		)
	]]>
	</insert>

	<select id="srvyDtaDAO.selectSrvyDtaList"
		parameterClass="srvyDtaVO" resultClass="srvyDtaVO">
<![CDATA[
		/* srvyDtaDAO.selectSrvyDtaList */
		/* 조사_자료 조회 */
			SELECT
				 dta.SRVY_NO /* 조사_자료_엑셀.조사_번호 */
				,dta.FILE_NO /* 조사_자료_엑셀.파일_번호 */
				,dta.DATA_CO /* 조사_자료_엑셀.데이터_건수 */
				,dta.ROUTE_CODE /* 조사_자료_엑셀.노선_코드 */
				,dta.DIRECT_CODE /* 조사_자료_엑셀.행선_코드 */
				,dta.TRACK /* 조사_자료_엑셀.차로 */
				,dta.STRTPT /* 조사_자료_엑셀.시점 */
				,dta.ENDPT /* 조사_자료_엑셀.종점 */
				,dta.SRVY_DE /* 조사_자료_엑셀.조사_일자 */
				,dta.SRVY_NM /* 조사_자료_엑셀.조사_명 */
				,dta.EXMNR_NM /* 조사_자료_엑셀.조사자_명 */
				,dta.EVL_PROCESS_AT /* 조사_자료_엑셀.평가_처리_여부 */
				,dta.GPS_CORTN_PROCESS_AT /* 조사_자료_엑셀.GPS_보정_처리_여부 */
				,dta.PRDTMDL_PROCESS_AT /* 조사_자료_엑셀.예측모델_처리_여부 */
				,dta.SM_PROCESS_AT /* 조사_자료_엑셀.집계_처리_여부 */
				,dta.VAL_EVL_AT /* 조사_자료_엑셀.유효성_평가_여부 */
				,dta.DELETE_AT /* 조사_자료_엑셀.삭제_여부 */
				,dta.USE_AT /* 조사_자료_엑셀.사용_여부 */
				,dta.CRTR_NO /* 조사_자료_엑셀.생성자_번호 */
				,dta.CREAT_DT /* 조사_자료_엑셀.생성_일시 */
				,dta.UPDUSR_NO /* 조사_자료_엑셀.수정자_번호 */
				,dta.UPDT_DT /* 조사_자료_엑셀.수정_일시 */
                , (
                    SELECT
                        BB.FILE_COURS
                    FROM TN_ATTACH_FILE AA
                    INNER JOIN TN_ATTACH_DETAIL_FILE BB
                        ON BB.FILE_NO = AA.FILE_NO
                        AND BB.FILE_SE_CODE = 'FLSE0006'
                    WHERE
                        AA.FILE_NO = dta.FILE_NO
                    LIMIT 1
                ) FILE_COURS /* 첨부_파일.파일_경로 */
			FROM TN_SRVY_DTA dta
		WHERE 1=1
			AND  SRVY_NO = #SRVY_NO#::int
]]>
	</select>

	<insert id="srvyDtaDAO.insertTmpExcelData">
		<selectKey resultClass="String" keyProperty="DTA_NO">
  <![CDATA[
  select COALESCE(MAX(dta_no),0)+1 AS DTA_NO from tmp_mumm_sctn_srvy_dta;
  ]]>
		</selectKey>
	<![CDATA[
		/* srvyDtaDAO.insertTmpExcelData */
		/* 임시_최소_구간_조사_자료 등록 */
		INSERT INTO TMP_MUMM_SCTN_SRVY_DTA (
			DTA_NO /* 최소_구간_조사_자료.자료_번호 */
            , SRVY_NO /* 최소_구간_조사_자료.조사_번호 */
			, SRVY_YEAR /* 최소_구간_조사_자료.조사_년도 */
			, ROUTE_CODE /* 최소_구간_조사_자료.노선_코드 */
			, DIRECT_CODE /* 최소_구간_조사_자료.행선_코드 */
			, TRACK /* 최소_구간_조사_자료.차로 */
			, STRTPT /* 최소_구간_조사_자료.시점 */
			, ENDPT /* 최소_구간_조사_자료.종점 */
			, IRI_VAL /* 최소_구간_조사_자료.종단평탄성_값 */
			, RD_VAL /* 최소_구간_조사_자료.소성변형_값 */
			, VRTCAL_CR /* 최소_구간_조사_자료.종방향_균열 */
			, HRZNTAL_CR /* 최소_구간_조사_자료.횡방향_균열 */
			, CNSTRCT_JOINT_CR /* 최소_구간_조사_자료.시공_줄눈_균열 */
			, TRTS_BAC_CR /* 최소_구간_조사_자료.거북등_균열 */
			, PTCHG_CR /* 최소_구간_조사_자료.패칭_균열 */
			, CR_VAL /* 최소_구간_조사_자료.표면손상값 */
			, CR_IDX /* 최소_구간_조사_자료.표면손상지수 */
			, RD_IDX /* 최소_구간_조사_자료.소성변형지수 */
			, CNTL_DFECT /* 최소_구간_조사_자료.지배_결함 */
			, SRVY_KND /* 최소_구간_조사_자료.조사_종류 */
			, SRVY_MT /* 최소_구간_조사_자료.조사_월 */
			, MEMO /* 최소_구간_조사_자료.메모 */
			, SRVY_DE /* 최소_구간_조사_자료.조사_일자 */
			, TRACE1_LA /* 최소_구간_조사_자료.TRACE1_LA */
			, TRACE1_LO /* 최소_구간_조사_자료.TRACE1_LO */
			, TRACE2_LA /* 최소_구간_조사_자료.TRACE2_LA */
			, TRACE2_LO /* 최소_구간_조사_자료.TRACE2_LO */
			, SRVY_NM /* 최소_구간_조사_자료.조사_명 */
			, EXMNR_NM /* 최소_구간_조사_자료.조사자_명 */
			, SCTN_STRTPT_DC /* 최소_구간_조사_자료.구간_시점_설명 */
			, SCTN_ENDPT_DC /* 최소_구간_조사_자료.구간_종점_설명 */
			, ROAD_NM /* 최소_구간_조사_자료.도로_명 */
			, FRNT_IMG_FILE_NM /* 최소_구간_조사_자료.전방_이미지_파일_명 */
			, FRNT_IMG_FILE_COURS /* 최소_구간_조사_자료.전방_이미지_파일_경로 */
			, CR_IMG_FILE_NM /* 최소_구간_조사_자료.전방_이미지_파일_명 */
			, CR_IMG_FILE_COURS /* 최소_구간_조사_자료.균열_이미지_파일_경로 */
			, RDSRFC_IMG_FILE_NM_1 /* 최소_구간_조사_자료.노면_이미지_파일_명_1 */
			, RDSRFC_IMG_FILE_NM_2 /* 최소_구간_조사_자료.노면_이미지_파일_명_2 */
			, EXCEL_DTA_SEQ /* 최소_구간_조사_자료.엑셀_자료_SEQ */
			, FRMULA_NO /* 최소_구간_조사_자료.수식_번호 */
			, POTHOLE_CR /* 최소_구간_조사_자료.포트홀_균열 */
			, RI_IDX /* 최소_구간_조사_자료.평탄성_지수 */
			, BLOCK_CR
		    , CR_LT
		    , CR_WID
		    , NHPCI
		    , SPI
		    , XCR
		    , RCI
		    , SCR
		    , AC_LOW
		    , AC_MED
		    , AC_HI
		    , LC_LOW
		    , LC_MED
		    , LC_HI
		    , TC_LOW
		    , TC_MED
		    , TC_HI
		    , AC_IDX
		    , LC_IDX
		    , TC_IDX
		    , PTCHG_IDX
		    , RD_LOW
		    , RD_MED
		    , RD_HI
		    , STRTPT_TEST
		    , ENDPT_TEST
		    , BLOCK_CR_LOW
		    , BLOCK_CR_MED
		    , BLOCK_CR_HI
		    , POTHOLE_IDX
		    , DMG_CUZ_CLMT
		    , DMG_CUZ_VMTC
		    , DMG_CUZ_ETC
		    , BC_IDX
			, PC_GRAD /* 최소_구간_조사_자료.포장상태등급 */
			, GPCI /* 최소_구간_조사_자료.포장상태지수 */
		) VALUES (
			#DTA_NO#::numeric /* 최소_구간_조사_자료.자료_번호 */
			, #SRVY_NO#::numeric /* 최소_구간_조사_자료.조사_번호 */
			, #SRVY_YEAR# /* 최소_구간_조사_자료.조사_년도 */
			, #ROUTE_CODE# /* 최소_구간_조사_자료.노선_코드 */
			, #DIRECT_CODE# /* 최소_구간_조사_자료.행선_코드 */
			, #TRACK# /* 최소_구간_조사_자료.차로 */
			, COALESCE(#STRTPT#::numeric,0) /* 최소_구간_조사_자료.시점 */
			, COALESCE(#ENDPT#::numeric,0) /* 최소_구간_조사_자료.종점 */
			, COALESCE(#IRI_VAL#::numeric,0) /* 최소_구간_조사_자료.종단평탄성_값 */
			, COALESCE(#RD_VAL#::numeric,0) /* 최소_구간_조사_자료.소성변형_값 */
			, COALESCE(#VRTCAL_CR#::numeric,0) /* 최소_구간_조사_자료.종방향_균열 */
			, COALESCE(#HRZNTAL_CR#::numeric,0) /* 최소_구간_조사_자료.횡방향_균열 */
			, COALESCE(#CNSTRCT_JOINT_CR#::numeric,0) /* 최소_구간_조사_자료.시공_줄눈_균열 */
			, COALESCE(#TRTS_BAC_CR#::numeric,0) /* 최소_구간_조사_자료.거북등_균열 */
			, COALESCE(#PTCHG_CR#::numeric,0) /* 최소_구간_조사_자료.패칭_균열 */
			, COALESCE(#CR_VAL#::numeric,0) /* 최소_구간_조사_자료.표면손상값 */
			, COALESCE(#CR_IDX#::numeric,0) /* 최소_구간_조사_자료.표면손상지수 */
			, COALESCE(#RD_IDX#::numeric,0) /* 최소_구간_조사_자료.소성변형지수 */
			, #CNTL_DFECT# /* 최소_구간_조사_자료.지배_결함 */
			, #SRVY_KND# /* 최소_구간_조사_자료.조사_종류 */
			, #SRVY_MT# /* 최소_구간_조사_자료.조사_월 */
			, #MEMO# /* 최소_구간_조사_자료.메모 */
			, #SRVY_DE# /* 최소_구간_조사_자료.조사_일자 */
			, COALESCE(#TRACE1_LA#::numeric,0) /* 최소_구간_조사_자료.TRACE1_LA */
			, COALESCE(#TRACE1_LO#::numeric,0) /* 최소_구간_조사_자료.TRACE1_LO */
			, COALESCE(#TRACE2_LA#::numeric,0) /* 최소_구간_조사_자료.TRACE2_LA */
			, COALESCE(#TRACE2_LO#::numeric,0) /* 최소_구간_조사_자료.TRACE2_LO */
			, #SRVY_NM# /* 최소_구간_조사_자료.조사_명 */
			, #EXMNR_NM# /* 최소_구간_조사_자료.조사자_명 */
			, #SCTN_STRTPT_DC# /* 최소_구간_조사_자료.구간_시점_설명 */
			, #SCTN_ENDPT_DC# /* 최소_구간_조사_자료.구간_종점_설명 */
			, #ROAD_NM# /* 최소_구간_조사_자료.도로_명 */
			, #FRNT_IMG_FILE_NM# /* 최소_구간_조사_자료.전방_이미지_파일_명 */
			, #FRNT_IMG_FILE_COURS# /* 최소_구간_조사_자료.전방_이미지_파일_경로 */
			, #CR_IMG_FILE_NM# /* 최소_구간_조사_자료.균열_이미지_파일_명 */
			, #CR_IMG_FILE_COURS# /* 최소_구간_조사_자료.균열_이미지_파일_경로 */
			, #RDSRFC_IMG_FILE_NM_1# /* 최소_구간_조사_자료.노면_이미지_파일_명_1 */
			, #RDSRFC_IMG_FILE_NM_2# /* 최소_구간_조사_자료.노면_이미지_파일_명_2 */
			, COALESCE(#EXCEL_DTA_SEQ#::numeric,0)  /* 최소_구간_조사_자료.엑셀_자료_SEQ */
			, COALESCE(#FRMULA_NO#::numeric,0)  /* 최소_구간_조사_자료.수식_번호 */
			, COALESCE(#POTHOLE_CR#::numeric,0)  /* 최소_구간_조사_자료.포트홀_균열 */
			, COALESCE(#RI_IDX#::numeric,0)  /* 최소_구간_조사_자료.평탄성_지수 */
			, COALESCE(#BLOCK_CR#::numeric,0)
			, COALESCE(#CR_LT#::numeric,0)
			, COALESCE(#CR_WID#::numeric,0)
			, COALESCE(#NHPCI#::numeric,0)
			, COALESCE(#SPI#::numeric,0)
			, COALESCE(#XCR#::numeric,0)
			, COALESCE(#RCI#::numeric,0)
			, COALESCE(#SCR#::numeric,0)
			, COALESCE(#AC_LOW#::numeric,0)
			, COALESCE(#AC_MED#::numeric,0)
			, COALESCE(#AC_HI#::numeric,0)
			, COALESCE(#LC_LOW#::numeric,0)
			, COALESCE(#LC_MED#::numeric,0)
			, COALESCE(#LC_HI#::numeric,0)
			, COALESCE(#TC_LOW#::numeric,0)
			, COALESCE(#TC_MED#::numeric,0)
			, COALESCE(#TC_HI#::numeric,0)
			, COALESCE(#AC_IDX#::numeric,0)
			, COALESCE(#LC_IDX#::numeric,0)
			, COALESCE(#TC_IDX#::numeric,0)
			, COALESCE(#PTCHG_IDX#::numeric,0)
			, COALESCE(#RD_LOW#::numeric,0)
			, COALESCE(#RD_MED#::numeric,0)
			, COALESCE(#RD_HI#::numeric,0)
			, COALESCE(#STRTPT_TEST#::numeric,0)
			, COALESCE(#ENDPT_TEST#::numeric,0)
			, COALESCE(#BLOCK_CR_LOW#::numeric,0)
			, COALESCE(#BLOCK_CR_MED#::numeric,0)
			, COALESCE(#BLOCK_CR_HI#::numeric,0)
			, COALESCE(#POTHOLE_IDX#::numeric,0)
			, COALESCE(#DMG_CUZ_CLMT#::numeric,0)
			, COALESCE(#DMG_CUZ_VMTC#::numeric,0)
			, COALESCE(#DMG_CUZ_ETC#::numeric,0)
			, COALESCE(#BC_IDX#::numeric,0)
			, COALESCE(#PC_GRAD#::numeric,0) /* 최소_구간_조사_자료.포장상태등급 */
			, COALESCE(#GPCI#::numeric,0) /* 최소_구간_조사_자료.포장상태지수 */
		)
]]>
	</insert>

	<!-- 조사자료 엑셀 데이터를 최소구간 조사 자료에 입력한다. -->
	<parameterMap id="prc_savesurveydata_map" class="java.util.Map">
		<parameter property="p_USER_NO" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_SRVY_NO" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_FRMULA_NM" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="P_ROW_COUNT" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_MODE" javaType="java.lang.String" jdbcType="VARCHAR" />
	</parameterMap>
    <select id="srvyDtaDAO.PRC_SAVESURVEYDATA" parameterMap="prc_savesurveydata_map" resultClass="hashMap">
        SELECT * FROM PRC_SAVESURVEYDATA(?::text, ?::text, ?::text, ?::text, ?::text)
    </select>

    <!-- 입력한 조사자료 엑셀 데이터를 시스템에 반영한다. -->
	<parameterMap id="prc_srvy_dta_sys_reflct_map" class="java.util.Map">
		<parameter property="p_USER_NO" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_SRVY_NO" javaType="java.lang.String" jdbcType="VARCHAR" />
	</parameterMap>
	<select id="srvyDtaDAO.PRC_SRVY_DTA_SYS_REFLCT" parameterMap="prc_srvy_dta_sys_reflct_map" resultClass="hashMap">
	/* srvyDtaDAO.PRC_SRVY_DTA_SYS_REFLCT */
		SELECT * FROM PRC_SRVY_DTA_SYS_REFLCT(?::text, ?::text)
	</select>

	<update id="srvyDtaDAO.updateSrvyDta">
<![CDATA[
		/* srvyDtaDAO.updateSrvyDta */
		/* 조사_자료_엑셀 수정 */
		UPDATE TN_SRVY_DTA SET
		  UPDT_DT = NOW()
		, VAL_EVL_AT = #VAL_EVL_AT#
		WHERE 1 = 1
		AND SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
]]>
	</update>

	<select id="srvyDtaDAO.selectSrvyDtaUploadResultList"
		parameterClass="srvyDtaVO" resultClass="srvyDtaVO">
<![CDATA[
		/* srvyDtaDAO.selectSrvyDtaUploadResultList */
		/* 조사_자료_엑셀  파일 업로드 결과 조회  */
		SELECT * FROM (SELECT ROW_NUMBER() OVER( ORDER BY $sidx$ $sord$  ) rn, tb.* FROM (
			SELECT  LTRIM(tnsrvydta.ROUTE_CODE,'0') AS ROUTE_CODE
                 , (SELECT tnrouteinfo.ROAD_NAME FROM TN_ROUTE_INFO tnrouteinfo WHERE tnrouteinfo.ROAD_NO = tnsrvydta.ROUTE_CODE) AS ROAD_NAME
                 , CASE WHEN tnsrvydta.DIRECT_CODE = 'S' THEN '상행' ELSE '하행' END DIRECT_CODE
                 , tnsrvydta.TRACK
	     		 , CASE WHEN tlsrvydtalog.PROCESS_STTUS = 'PCST0002' THEN 'S' ELSE 'F' END  AS SUCCESS_KND
                 , tnsrvydta.DATA_CO
                 , TO_CHAR(tnsrvydta.CREAT_DT, 'YYYY-MM-DD') AS CREAT_DT
	     		 , tnsrvydta.CRTR_NO
	     		 , (SELECT tnsysuser.USER_NM FROM TN_SYS_USER tnsysuser WHERE tnsysuser.USER_NO = tnsrvydta.CRTR_NO and tnsysuser.USE_AT = 'Y' and tnsysuser.DELETE_AT = 'N') CRTR_NM
	     		 , tnsrvydta.SRVY_NO
	     		 , TO_CHAR(DATE(tnsrvydta.SRVY_DE), 'YYYY-MM-DD') AS SRVY_DE
                 , (
                    SELECT COUNT(*)
                      FROM TMP_MUMM_SCTN_SRVY_DTA AA
                     WHERE AA.SRVY_NO = tnsrvydta.SRVY_NO
                       AND AA.RDSRFC_IMG_FILE_NM_2 IS NOT NULL
                       AND AA.RDSRFC_IMG_FILE_NM_2 != ' '
                       AND AA.RDSRFC_IMG_FILE_NM_2 != ''
                   ) DATA_PROGRS_CNT
                , tnsrvydta.SRVY_NM
			FROM TN_SRVY_DTA tnsrvydta, TL_SRVY_DTA_LOG tlsrvydtalog
		   WHERE tnsrvydta.SRVY_NO = tlsrvydtalog.SRVY_NO
		   	 AND tnsrvydta.CRTR_NO = tlsrvydtalog.CRTR_NO
		   	 AND tnsrvydta.USE_AT = 'Y'
		   	 AND tnsrvydta.DELETE_AT = 'N'
		     AND tlsrvydtalog.PROCESS_SE = (SELECT MAX(tlsrvydtalog.PROCESS_SE) FROM TL_SRVY_DTA_LOG tlsrvydtalog WHERE tlsrvydtalog.SRVY_NO = tnsrvydta.SRVY_NO AND tlsrvydtalog.PROCESS_SE IN ('PCSE0001', 'PCSE0002'))
		     AND tnsrvydta.SRVY_DE IS NOT NULL
]]>
			<isNotEmpty property="ROAD_NO">
				<![CDATA[
					AND tnsrvydta.ROUTE_CODE = #ROAD_NO#
				]]>
			</isNotEmpty>
<![CDATA[
             ORDER BY tnsrvydta.SRVY_DE DESC nulls last
		) tb) resultlist  WHERE 1=1
]]>
		<isEqual prepend=" " property="usePage" compareValue="true">
<![CDATA[
    AND rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
]]>
		</isEqual>
	</select>

	<select id="srvyDtaDAO.selectSrvyDtaUploadResultCount"
		parameterClass="srvyDtaVO" resultClass="int">
<![CDATA[
		/* srvyDtaDAO.selectSrvyDtaUploadResultCount */
		/* 조사_자료_엑셀  파일 업로드 결과 개수 조회  */
		SELECT COUNT(*) FROM (
			SELECT
                  tnsrvydta.ROUTE_CODE
                 , (SELECT tnrouteinfo.ROAD_NAME FROM TN_ROUTE_INFO tnrouteinfo WHERE tnrouteinfo.ROAD_NO = tnsrvydta.ROUTE_CODE) AS ROAD_NAME
                 , CASE WHEN tnsrvydta.DIRECT_CODE = 'S' THEN '상행' ELSE '하행' END DIRECT_CODE
                 , tnsrvydta.TRACK
	     		 , CASE WHEN tlsrvydtalog.PROCESS_STTUS = 'PCST0002' THEN 'S' ELSE 'F' END  AS SUCCESS_KND
                 , tnsrvydta.DATA_CO
                 , TO_CHAR(tnsrvydta.CREAT_DT, 'YYYY-MM-DD') AS CREAT_DT
	     		 , tnsrvydta.CRTR_NO
	     		 , (SELECT tnsysuser.USER_NM FROM TN_SYS_USER tnsysuser WHERE tnsysuser.USER_NO = tnsrvydta.CRTR_NO and tnsysuser.USE_AT = 'Y' and tnsysuser.DELETE_AT = 'N') CRTR_NM
	     		 , TO_CHAR(DATE(tnsrvydta.SRVY_DE), 'YYYY-MM-DD') AS SRVY_DE
			FROM TN_SRVY_DTA tnsrvydta, TL_SRVY_DTA_LOG tlsrvydtalog
		   WHERE tnsrvydta.SRVY_NO = tlsrvydtalog.SRVY_NO
		   	 AND tnsrvydta.CRTR_NO = tlsrvydtalog.CRTR_NO
		   	 AND tnsrvydta.USE_AT = 'Y'
		   	 AND tnsrvydta.DELETE_AT = 'N'
		     AND tlsrvydtalog.PROCESS_SE = (SELECT MAX(tlsrvydtalog.PROCESS_SE) FROM TL_SRVY_DTA_LOG tlsrvydtalog WHERE tlsrvydtalog.SRVY_NO = tnsrvydta.SRVY_NO AND tlsrvydtalog.PROCESS_SE IN ('PCSE0001', 'PCSE0002'))
		     AND tnsrvydta.SRVY_DE IS NOT NULL
]]>
			<isNotEmpty property="ROAD_NO">
				<![CDATA[
					AND tnsrvydta.ROUTE_CODE = #ROAD_NO#
				]]>
			</isNotEmpty>
<![CDATA[
		)as sub_SrvyDtaExcel
]]>
	</select>

	<select id="srvyDtaDAO.selectTmpExcelData" resultClass="srvyDtaVO">
<![CDATA[
		/* srvyDtaDAO.selectTmpExcelData */

	SELECT CASE WHEN sumChk > 0 THEN 'Y' ELSE 'N' END as SE_CD
	    FROM (
	        SELECT
	            SUM(COALESCE(AC_LOW,0))+
	            SUM(COALESCE(AC_MED,0))+
	            SUM(COALESCE(AC_HI,0))+
	            SUM(COALESCE(LC_LOW,0))+
	            SUM(COALESCE(LC_MED,0))+
	            SUM(COALESCE(LC_HI,0))+
	            SUM(COALESCE(TC_LOW,0))+
	            SUM(COALESCE(TC_MED,0))+
	            SUM(COALESCE(TC_HI,0))+
	            SUM(COALESCE(BLOCK_CR_LOW,0))+
	            SUM(COALESCE(BLOCK_CR_MED,0))+
	            SUM(COALESCE(BLOCK_CR_HI,0))+
                SUM(COALESCE(PTCHG_CR,0))+
                SUM(COALESCE(POTHOLE_CR,0))
             as sumChk
	        FROM TMP_MUMM_SCTN_SRVY_DTA
            WHERE
                SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
	    ) as tb
]]>
	</select>

	<!-- 최소구간 조사 자료를 이용하여 집계구간 조사자료 데이터를 산출한다. -->
	<parameterMap id="prc_aggregate_general_map" class="java.util.Map">
		<parameter property="p_USER_NO" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_SRVY_NO" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_ROUTE_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_DIRECT_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_TRACK" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_STRTPT" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_ENDPT" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_FRMULA_NM" javaType="java.lang.String" jdbcType="VARCHAR" />
		<parameter property="p_MODE" javaType="java.lang.String" jdbcType="VARCHAR" />
	</parameterMap>
	<select id="srvyDtaDAO.PRC_AGGREGATE_GENERAL" parameterMap="prc_aggregate_general_map" resultClass="hashMap">
		SELECT * FROM PRC_AGGREGATE_GENERAL(?::text, ?::text, ?::text, ?::text, ?::text, ?::text, ?::text, ?::text, ?::text)
	</select>

	<update id="srvyDtaDAO.updateTmpExcelData">
<![CDATA[
		/* srvyDtaDAO.updateTmpExcelData */
		/* 임시_최소_구간_조사_자료 수정 */
		UPDATE TMP_MUMM_SCTN_SRVY_DTA SET
		    AC_LOW         = COALESCE(#AC_LOW#::numeric/1000000,0)
		    , AC_MED       = COALESCE(#AC_MED#::numeric/1000000,0)
		    , AC_HI        = COALESCE(#AC_HI#::numeric/1000000,0)
		    , LC_LOW       = COALESCE(#LC_LOW#::numeric/1000,0)
		    , LC_MED       = COALESCE(#LC_MED#::numeric/1000,0)
		    , LC_HI        = COALESCE(#LC_HI#::numeric/1000,0)
		    , TC_LOW       = COALESCE(#TC_LOW#::numeric/1000,0)
		    , TC_MED       = COALESCE(#TC_MED#::numeric/1000,0)
		    , TC_HI        = COALESCE(#TC_HI#::numeric/1000,0)
            , PTCHG_CR     = COALESCE(#PTCHG_CR#::numeric/1000000,0)
            , POTHOLE_CR   = COALESCE(#POTHOLE_CR#::numeric/1000000,0)
            , RDSRFC_IMG_FILE_NM_2 = #RDSRFC_IMG_FILE_NM_2#
		WHERE SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
		  AND RDSRFC_IMG_FILE_NM_1 = #RDSRFC_IMG_FILE_NM_1# /* 최소_구간_조사_자료.노면_이미지_파일_명_1 */
]]>
	</update>

	<select id="srvyDtaDAO.selectSrvyDtaUploadFileList"
		parameterClass="srvyDtaVO" resultClass="srvyDtaVO">
<![CDATA[
		/* srvyDtaDAO.selectSrvyDtaUploadFileList */
		/* 조사_자료_엑셀  파일 업로드 결과 상세 조회  */
		SELECT * FROM (
			 SELECT ROW_NUMBER() OVER( ORDER BY tnsrvydta.SRVY_NO ASC, tnsrvydta.FILE_NO DESC ) RN
				, LTRIM(tnsrvydta.route_code,'0') route_code
				, (SELECT tnrouteinfo.ROAD_NAME FROM TN_ROUTE_INFO tnrouteinfo WHERE tnrouteinfo.ROAD_NO = tnsrvydta.ROUTE_CODE) AS ROAD_NAME
     			, CASE WHEN tnsrvydta.DIRECT_CODE = 'S' THEN '상행' ELSE '하행' END DIRECT_CODE
     			, tnsrvydta.TRACK
			 	, (SELECT tnattachfile.ORGINL_FILE_NM FROM TN_ATTACH_FILE tnattachfile WHERE tnattachfile.FILE_NO = tnsrvydta.FILE_NO) FILE_NM
			 	, tlsrvydtalog.LOG_MSSAGE
			    , TO_CHAR(tnsrvydta.CREAT_DT, 'YYYY-MM-DD') AS CREAT_DT
			    , (SELECT tnsysuser.USER_NM FROM TN_SYS_USER tnsysuser WHERE tnsysuser.USER_NO = tnsrvydta.CRTR_NO) USER_NM
			    , tlsrvydtalog.LOG_MSSAGE
			   FROM TN_SRVY_DTA tnsrvydta, TL_SRVY_DTA_LOG tlsrvydtalog
			  WHERE tnsrvydta.SRVY_NO = tlsrvydtalog.SRVY_NO
			  	AND tnsrvydta.CRTR_NO = tlsrvydtalog.CRTR_NO
			 	AND tnsrvydta.USE_AT = 'Y'
		   	 	AND tnsrvydta.DELETE_AT = 'N'
			 	AND tlsrvydtalog.PROCESS_STTUS = #PROCESS_STTUS#
			 	AND tnsrvydta.CRTR_NO = #CRTR_NO#::int
			 	AND tnsrvydta.SRVY_NO = #SRVY_NO#::int
		) tnsrvydta  WHERE 1=1
]]>
		<isEqual prepend=" " property="usePage" compareValue="true">
<![CDATA[
    AND rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
]]>
		</isEqual>
	</select>

	<select id="srvyDtaDAO.selectSrvyDtaUploadFileCount"
		parameterClass="srvyDtaVO" resultClass="int">
<![CDATA[
		/* srvyDtaDAO.selectSrvyDtaUploadFileCount */
		/* 조사_자료_엑셀  파일 업로드 결과 상세 조회 개수  */
		SELECT COUNT(*) totCnt
	      FROM TN_SRVY_DTA tnsrvydta, TL_SRVY_DTA_LOG tlsrvydtalog
			  WHERE tnsrvydta.SRVY_NO = tlsrvydtalog.SRVY_NO
			  	AND tnsrvydta.CRTR_NO = tlsrvydtalog.CRTR_NO
			 	AND tnsrvydta.USE_AT = 'Y'
		   	 	AND tnsrvydta.DELETE_AT = 'N'
			 	AND tlsrvydtalog.PROCESS_STTUS = #PROCESS_STTUS#
			 	AND tnsrvydta.CRTR_NO = #CRTR_NO#::int
			 	AND tnsrvydta.SRVY_NO = #SRVY_NO#::int
]]>
	</select>

	<select id="srvyDtaDAO.selectAnalDataPopupResultList"
		parameterClass="srvyDtaVO" resultClass="srvyDtaVO">
<![CDATA[
		/* srvyDtaDAO.selectAnalDataPopupResultList */

		SELECT * FROM (SELECT ROW_NUMBER() OVER( ORDER BY $sidx$ $sord$  ) rn, tb.* FROM (
			SELECT  LTRIM(tmpmummsctnsrvydta.ROUTE_CODE,'0') AS ROUTE_CODE
                 , (SELECT tnrouteinfo.ROAD_NAME FROM TN_ROUTE_INFO tnrouteinfo WHERE tnrouteinfo.ROAD_NO = tmpmummsctnsrvydta.ROUTE_CODE) AS ROAD_NAME
                 , CASE WHEN DIRECT_CODE = 'S' THEN '상행' ELSE '하행' END DIRECT_CODE
                 , TRACK
                 , STRTPT
                 , ENDPT
                 , IRI_VAL /* 최소_구간_조사_자료.종단평탄성_값 */
				 , RD_VAL /* 최소_구간_조사_자료.소성변형_값 */
				 , VRTCAL_CR /* 최소_구간_조사_자료.종방향_균열 */
				 , HRZNTAL_CR /* 최소_구간_조사_자료.횡방향_균열 */
				 , CNSTRCT_JOINT_CR /* 최소_구간_조사_자료.시공_줄눈_균열 */
				 , TRTS_BAC_CR /* 최소_구간_조사_자료.거북등_균열 */
				 , PTCHG_CR /* 최소_구간_조사_자료.패칭_균열 */
				 , CR_VAL /* 최소_구간_조사_자료.표면손상값 */
				 , CR_IDX /* 최소_구간_조사_자료.표면손상지수 */
				 , RD_IDX /* 최소_구간_조사_자료.소성변형지수 */
				 , CNTL_DFECT /* 최소_구간_조사_자료.지배_결함 */
				 , SRVY_KND /* 최소_구간_조사_자료.조사_종류 */
				 , SRVY_MT /* 최소_구간_조사_자료.조사_월 */
				 , MEMO /* 최소_구간_조사_자료.메모 */
				 , SRVY_DE /* 최소_구간_조사_자료.조사_일자 */
				 , TRACE1_LA /* 최소_구간_조사_자료.TRACE1_LA */
				 , TRACE1_LO /* 최소_구간_조사_자료.TRACE1_LO */
				 , TRACE2_LA /* 최소_구간_조사_자료.TRACE2_LA */
				 , TRACE2_LO /* 최소_구간_조사_자료.TRACE2_LO */
				 , SRVY_NM /* 최소_구간_조사_자료.조사_명 */
				 , EXMNR_NM /* 최소_구간_조사_자료.조사자_명 */
				 , SCTN_STRTPT_DC /* 최소_구간_조사_자료.구간_시점_설명 */
				 , SCTN_ENDPT_DC /* 최소_구간_조사_자료.구간_종점_설명 */
				 , ROAD_NM /* 최소_구간_조사_자료.도로_명 */
				 , FRNT_IMG_FILE_NM /* 최소_구간_조사_자료.전방_이미지_파일_명 */
				 , RDSRFC_IMG_FILE_NM_1 /* 최소_구간_조사_자료.노면_이미지_파일_명_1 */
				 , RDSRFC_IMG_FILE_NM_2 /* 최소_구간_조사_자료.노면_이미지_파일_명_2 */
				 , EXCEL_DTA_SEQ /* 최소_구간_조사_자료.엑셀_자료_SEQ */
				 , FRMULA_NO /* 최소_구간_조사_자료.수식_번호 */
				 , POTHOLE_CR /* 최소_구간_조사_자료.포트홀_균열 */
				 , RI_IDX /* 최소_구간_조사_자료.평탄성_지수 */
				 , BLOCK_CR
			     , CR_LT
			     , CR_WID
			     , NHPCI
			     , SPI
			     , XCR
			     , RCI
			     , SCR
			     , AC_LOW
			     , AC_MED
			     , AC_HI
			     , LC_LOW
			     , LC_MED
			     , LC_HI
			     , TC_LOW
			     , TC_MED
			     , TC_HI
			     , AC_IDX
			     , LC_IDX
			     , TC_IDX
			     , PTCHG_IDX
			     , RD_LOW
			     , RD_MED
			     , RD_HI
			     , STRTPT_TEST
			     , ENDPT_TEST
			     , BLOCK_CR_LOW
			     , BLOCK_CR_MED
			     , BLOCK_CR_HI
			     , POTHOLE_IDX
			     , DMG_CUZ_CLMT
			     , DMG_CUZ_VMTC
			     , DMG_CUZ_ETC
			     , BC_IDX
				 , PC_GRAD /* 최소_구간_조사_자료.포장상태등급 */
				 , GPCI /* 최소_구간_조사_자료.포장상태지수 */
	     		 , SRVY_NO
                 , (AC_LOW + AC_MED + AC_HI) AC_TOT
                 , (LC_LOW + LC_MED + LC_HI) LC_TOT
                 , (TC_LOW + TC_MED + TC_HI) TC_TOT
			FROM TMP_MUMM_SCTN_SRVY_DTA tmpmummsctnsrvydta
		   WHERE 1=1
			 AND SRVY_NO = #SRVY_NO#::int
             ORDER BY STRTPT
		) tb) resultlist  WHERE 1=1
]]>
		<isEqual prepend=" " property="usePage" compareValue="true">
<![CDATA[
    AND rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
]]>
		</isEqual>
	</select>

	<select id="srvyDtaDAO.selectAnalDataPopupResultCount"
		parameterClass="srvyDtaVO" resultClass="int">
<![CDATA[
		/* srvyDtaDAO.selectAnalDataPopupResultCount */
		SELECT COUNT(*)
			FROM TMP_MUMM_SCTN_SRVY_DTA
		   WHERE 1=1
		   	 AND SRVY_NO = #SRVY_NO#::int
]]>
	</select>

	<insert id="srvyDtaDAO.insertAiDta">
		<selectKey resultClass="String" keyProperty="AI_NO">
  <![CDATA[
  select COALESCE(MAX(ai_no),0)+1 AS AI_NO from tmp_ai_dta;
  ]]>
		</selectKey>
	<![CDATA[
		/* srvyDtaDAO.insertAiDta */
		/* AI_자료 등록 */
		INSERT INTO TMP_AI_DTA (
			  AI_NO /* AI_번호 */
			, REGION_TYPE /* 균열_종류 */
			, AREA /* 면적 */
			, LEN /* 길이 */
			, SEVERITY /* 심각도 */
			, RESULT_IMAGE /* 결과_이미지 */
		) VALUES (
			  #AI_NO#::numeric
			, #REGION_TYPE#
			, COALESCE(#AREA#::numeric,0)
			, COALESCE(#LEN#::numeric,0)
			, #SEVERITY#
			, #RESULT_IMAGE#
		)
]]>
	</insert>

	<select id="srvyDtaDAO.selectAiDtaList" resultClass="srvyDtaVO">
<![CDATA[
		/* srvyDtaDAO.selectAiDtaList */

	SELECT
		  REGION_TYPE
		, SEVERITY
		, CASE
		    WHEN REGION_TYPE = 'lc' or REGION_TYPE = 'tc' THEN SUM(COALESCE(LEN,0))
		    WHEN REGION_TYPE = 'ac' or REGION_TYPE = 'patch' or REGION_TYPE = 'pothole' THEN SUM(COALESCE(AREA,0))
		  END AS AI_SUM_VALUE
		FROM TMP_AI_DTA
	GROUP BY REGION_TYPE, SEVERITY

]]>
	</select>

	<delete id="srvyDtaDAO.deleteAiDta">
	<![CDATA[
		/* srvyDtaDAO.deleteAiDta */
		DELETE FROM TMP_AI_DTA
]]>
	</delete>

	<delete id="srvyDtaDAO.deleteTmpMummSctnSrvyDta">
	<![CDATA[
		/* srvyDtaDAO.deleteTmpMummSctnSrvyDta */
		DELETE FROM TMP_MUMM_SCTN_SRVY_DTA
        WHERE
            SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
]]>
	</delete>

	<delete id="srvyDtaDAO.deleteTnMummSctnSrvyDta">
	<![CDATA[
		/* srvyDtaDAO.deleteTnMummSctnSrvyDta */
		DELETE FROM TN_MUMM_SCTN_SRVY_DTA
        WHERE
            SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
]]>
	</delete>

	<delete id="srvyDtaDAO.deleteTnSrvyDtaSttus">
	<![CDATA[
		/* srvyDtaDAO.deleteTnSrvyDtaSttus */
		DELETE FROM TN_SRVY_DTA_STTUS
        WHERE
            SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
]]>
	</delete>

	<delete id="srvyDtaDAO.deleteTnSmDtaGnlSttus">
	<![CDATA[
		/* srvyDtaDAO.deleteTnSmDtaGnlSttus */
		DELETE FROM TN_SM_DTA_GNL_STTUS
        WHERE
            SRVY_NO = #SRVY_NO#::int /* 조사_자료.조사_번호 */
]]>
	</delete>

	<update id="srvyDtaDAO.updateImgInfoOfTmpExcelData">
<![CDATA[
		/* srvyDtaDAO.updateImgInfoOfTmpExcelData */
		/* TMP_MUMM_SCTN_SRVY_DTA 테이블에 jpg이미지파일 경로 업데이트 */

		UPDATE TMP_MUMM_SCTN_SRVY_DTA AS mumm
			SET FRNT_IMG_FILE_COURS = attach.FILE_COURS
		FROM TN_ATTACH_DETAIL_FILE AS attach
		WHERE mumm.FRNT_IMG_FILE_NM = attach.ORGINL_FILE_NM
			AND attach.FILE_SE_CODE = 'FLSE0006'
			AND attach.USE_AT = 'Y'
			AND attach.DELETE_AT = 'N'
			AND attach.FILE_NO = #FILE_NO#::numeric
]]>
	</update>


</sqlMap>
